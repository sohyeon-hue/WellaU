{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { useModel as _useModel, mergeModels as _mergeModels } from 'vue';\nimport { ref, watch } from 'vue';\nimport { DownOutlined } from '@ant-design/icons-vue';\nexport default {\n  __name: 'AccordionBox',\n  props: /*@__PURE__*/_mergeModels({\n    show: {\n      type: Number,\n      default: () => {\n        return -1;\n      }\n    },\n    list: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    }\n  }, {\n    \"show\": {},\n    \"showModifiers\": {}\n  }),\n  emits: [\"update:show\"],\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const accordionLine = ref();\n    const props = __props;\n    const model = _useModel(__props, 'show');\n    const accordionLabelClick = idx => {\n      model.value = idx;\n    };\n    const actionEvent = (idx, open) => {\n      let h = 0;\n      if (!open) {\n        const p = accordionLine.value[0].querySelector(\".accordion-content\");\n        h = p.scrollHeight;\n      }\n      console.log(\"accordionLine.value : \", accordionLine.value);\n      accordionLine.value.forEach((l, i) => {\n        const _p = l.querySelector(\".accordion-content\");\n        if (i === idx) {\n          _p.style.height = h + \"rem\";\n        } else {\n          _p.style.height = 0;\n        }\n      });\n    };\n    watch(() => props.show, (n, o) => {\n      if (n !== o) actionEvent();\n    });\n    const __returned__ = {\n      accordionLine,\n      props,\n      model,\n      accordionLabelClick,\n      actionEvent,\n      ref,\n      watch,\n      get DownOutlined() {\n        return DownOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","DownOutlined","accordionLine","props","__props","model","_useModel","accordionLabelClick","idx","value","actionEvent","open","h","p","querySelector","scrollHeight","console","log","forEach","l","i","_p","style","height","show","n","o"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/components/Global/AccordionBox.vue"],"sourcesContent":["<template>\n    <div class=\"accordion-wrapper\">\n        <ul>\n            <li class=\"accordion-list-box \" :class=\"{open:accordion.open}\" v-for=\"(accordion,index) in props.list\" :key=\"'accordionList_'+index\" ref=\"accordionLine\">\n                <div class=\"accordion-label\" @click=\"accordionLabelClick(index,accordion.open)\">\n                    <div class=\"text\">\n                        <div class=\"tit\">{{accordion.tit}}</div>\n                        <div class=\"date\">{{accordion.date}}</div>\n                    </div>\n                    <i class=\"icon\">\n                        <DownOutlined />\n                    </i>\n                </div>\n                <div class=\"accordion-content\" :style=\"{height:accordion.h + 'rem'}\">\n                    <p v-html=\"accordion.con\"></p>\n                </div>\n            </li>\n        </ul>\n    </div>\n</template>\n<script setup>\n    import { ref,watch,defineProps,defineModel } from 'vue'\n    import { DownOutlined } from '@ant-design/icons-vue'\n\n\n    const accordionLine = ref();\n\n    const props = defineProps({\n        show : {\n            type : Number,\n            default : ()=>{\n                return -1\n            }\n        },\n        list : {\n            type : Array,\n            default : ()=>{\n                return [];\n            }\n        },\n    })\n    const model = defineModel('show')\n\n\n\n    const accordionLabelClick = (idx)=>{\n        model.value = idx;\n    }\n    const actionEvent = (idx,open)=>{\n        let h = 0;\n        if(!open){\n            const p = accordionLine.value[0].querySelector(\".accordion-content\")\n            h = p.scrollHeight\n        }\n        console.log(\"accordionLine.value : \",accordionLine.value)\n        accordionLine.value.forEach((l,i)=>{\n            const _p = l.querySelector(\".accordion-content\")\n            if(i === idx){\n                _p.style.height = h + \"rem\";\n            }else{\n                _p.style.height = 0;\n            }\n        })\n    }\n\n    watch(()=>props.show,(n,o)=>{\n        if(n !== o) actionEvent()\n    })\n</script>\n<style type=\"scss\" scoped>\n</style>"],"mappings":";;;AAqBI,SAASA,GAAG,EAACC,KAA6B,QAAQ,KAAI;AACtD,SAASC,YAAY,QAAQ,uBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;IAGnD,MAAMC,aAAa,GAAGH,GAAG,CAAC,CAAC;IAE3B,MAAMI,KAAK,GAAGC,OAAA;IAcd,MAAMC,KAAK,GAAGC,SAAW,CAAAF,OAAA,EAAC,MAAM;IAIhC,MAAMG,mBAAmB,GAAIC,GAAG,IAAG;MAC/BH,KAAK,CAACI,KAAK,GAAGD,GAAG;IACrB;IACA,MAAME,WAAW,GAAGA,CAACF,GAAG,EAACG,IAAI,KAAG;MAC5B,IAAIC,CAAC,GAAG,CAAC;MACT,IAAG,CAACD,IAAI,EAAC;QACL,MAAME,CAAC,GAAGX,aAAa,CAACO,KAAK,CAAC,CAAC,CAAC,CAACK,aAAa,CAAC,oBAAoB;QACnEF,CAAC,GAAGC,CAAC,CAACE,YAAW;MACrB;MACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAACf,aAAa,CAACO,KAAK;MACxDP,aAAa,CAACO,KAAK,CAACS,OAAO,CAAC,CAACC,CAAC,EAACC,CAAC,KAAG;QAC/B,MAAMC,EAAE,GAAGF,CAAC,CAACL,aAAa,CAAC,oBAAoB;QAC/C,IAAGM,CAAC,KAAKZ,GAAG,EAAC;UACTa,EAAE,CAACC,KAAK,CAACC,MAAM,GAAGX,CAAC,GAAG,KAAK;QAC/B,CAAC,MAAI;UACDS,EAAE,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC;QACvB;MACJ,CAAC;IACL;IAEAvB,KAAK,CAAC,MAAIG,KAAK,CAACqB,IAAI,EAAC,CAACC,CAAC,EAACC,CAAC,KAAG;MACxB,IAAGD,CAAC,KAAKC,CAAC,EAAEhB,WAAW,CAAC;IAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}