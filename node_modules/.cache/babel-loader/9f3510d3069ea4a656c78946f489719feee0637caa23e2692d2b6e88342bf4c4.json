{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"page\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BackButton = _resolveComponent(\"BackButton\");\n  const _component_Header_vue = _resolveComponent(\"Header-vue\");\n  const _component_lnbVue = _resolveComponent(\"lnbVue\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_ListSelectBox = _resolveComponent(\"ListSelectBox\");\n  const _component_ModalBox = _resolveComponent(\"ModalBox\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"app-wrapper\", [{\n      map: _ctx.map\n    }]])\n  }, [$options.backBtnShow ? (_openBlock(), _createBlock(_component_BackButton, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), $options.haderShow ? (_openBlock(), _createBlock(_component_Header_vue, {\n    key: 1,\n    value: _ctx.headerData,\n    onMenuIconClickEv: $options.menuIconClickEv,\n    onResetIconClick: $options.resetIconClick,\n    onStarIconClick: $options.starIconClick,\n    onClickRigntBtnEvent: $options.clickRigntBtnEvent,\n    onAlertIconClick: $options.alertIconClick,\n    onGroupClicEv1: $options.groupClicEv1,\n    onGroupClicEv2: $options.groupClicEv2,\n    onMaxInputEvent: $options.maxInputEvent,\n    onTitleClick: $options.titleClick,\n    onSelectClick: $options.selectClick\n  }, {\n    title: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.headerText), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"value\", \"onMenuIconClickEv\", \"onResetIconClick\", \"onStarIconClick\", \"onClickRigntBtnEvent\", \"onAlertIconClick\", \"onGroupClicEv1\", \"onGroupClicEv2\", \"onMaxInputEvent\", \"onTitleClick\", \"onSelectClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_lnbVue, {\n    open: _ctx.lnbOpen,\n    \"onUpdate:open\": _cache[0] || (_cache[0] = $event => _ctx.lnbOpen = $event),\n    profile: _ctx.profile\n  }, null, 8 /* PROPS */, [\"open\", \"profile\"]), _createElementVNode(\"div\", {\n    id: \"content\",\n    page: $options.pageStatus\n  }, [_createVNode(_component_router_view)], 8 /* PROPS */, _hoisted_1), _createCommentVNode(\" modal \"), _createVNode(_component_ModalBox, {\n    modalShow: _ctx.modalShow,\n    \"onUpdate:modalShow\": _cache[2] || (_cache[2] = $event => _ctx.modalShow = $event),\n    padding: 0\n  }, {\n    default: _withCtx(() => [_createVNode(_component_ListSelectBox, {\n      value: _ctx.listSelectBoxValue,\n      \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.listSelectBoxValue = $event),\n      title: \"그룹을 선택해주세요.\",\n      buttonText: \"+ 그룹 만들기\",\n      outLine: false,\n      list: _ctx.listSelectBoxList,\n      onListClick: $options.listSelectBoxListClick,\n      onBtnClick: $options.listSelectBoxBtnClick\n    }, null, 8 /* PROPS */, [\"value\", \"list\", \"onListClick\", \"onBtnClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modalShow\"])], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","map","_ctx","$options","backBtnShow","_createBlock","_component_BackButton","key","_createCommentVNode","haderShow","_component_Header_vue","value","headerData","onMenuIconClickEv","menuIconClickEv","onResetIconClick","resetIconClick","onStarIconClick","starIconClick","onClickRigntBtnEvent","clickRigntBtnEvent","onAlertIconClick","alertIconClick","onGroupClicEv1","groupClicEv1","onGroupClicEv2","groupClicEv2","onMaxInputEvent","maxInputEvent","onTitleClick","titleClick","onSelectClick","selectClick","title","_withCtx","_createTextVNode","_toDisplayString","headerText","_","_createVNode","_component_lnbVue","open","lnbOpen","_cache","$event","profile","_createElementVNode","id","page","pageStatus","_component_router_view","_hoisted_1","_component_ModalBox","modalShow","padding","default","_component_ListSelectBox","listSelectBoxValue","buttonText","outLine","list","listSelectBoxList","onListClick","listSelectBoxListClick","onBtnClick","listSelectBoxBtnClick"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-wrapper\" :class=\"[{map:map}]\">\n    <BackButton v-if=\"backBtnShow\" />\n    <Header-vue v-if=\"haderShow\"\n      :value=\"headerData\"\n      @menuIconClickEv=\"menuIconClickEv\"\n      @resetIconClick=\"resetIconClick\"\n      @starIconClick=\"starIconClick\"\n      @clickRigntBtnEvent=\"clickRigntBtnEvent\"\n      @alertIconClick=\"alertIconClick\"\n      @groupClicEv1=\"groupClicEv1\"\n      @groupClicEv2=\"groupClicEv2\"\n      @maxInputEvent=\"maxInputEvent\"\n      @titleClick=\"titleClick\"\n      @selectClick=\"selectClick\"\n    >\n      <template #title>\n        {{ headerText }}\n      </template>  \n    </Header-vue>\n    <lnbVue v-model:open=\"lnbOpen\" :profile=\"profile\" />\n    <div id=\"content\" :page=\"pageStatus\">\n      <router-view />\n    </div>\n    <!-- modal -->\n    <ModalBox v-model:modalShow=\"modalShow\" :padding=\"0\">\n      <ListSelectBox v-model:value=\"listSelectBoxValue\" title=\"그룹을 선택해주세요.\" buttonText=\"+ 그룹 만들기\" :outLine=\"false\" :list=\"listSelectBoxList\" @listClick=\"listSelectBoxListClick\" @btnClick=\"listSelectBoxBtnClick\" />\n    </ModalBox>\n  </div>\n</template>\n\n<script>\nimport BackButton from './components/BackButton'\nexport default {\n  name: 'App',\n  props : {},\n  components: {\n    BackButton\n  },\n  computed : {\n    pageStatus(){\n      return this.$store.state.pageStatus\n    },\n    backBtnShow(){\n      let temp = false;\n      if(this.pageStatus === \"login\" || this.pageStatus === \"groupMain\" || this.pageStatus === \"locationSharing\" || this.pageStatus === \"locationSharingDoneTime\" || this.pageStatus === \"sosView\" || this.pageStatus === \"sosViewCancel\"){\n        temp = true;\n      }\n      return temp;\n    },\n    haderShow(){\n      let temp = true;\n      if(this.pageStatus === \"listPage\" || this.pageStatus === \"login\" || this.pageStatus === \"sosView\" || this.pageStatus === \"sosViewCancel\" || this.pageStatus === \"pcView\"){\n        temp = false\n      }\n      return temp;\n    }\n  },\n  data : ()=>{\n    return {\n      checked : true,\n      headerData : {\n        headerShow : true,\n        type : 'type1',\n        like : true,\n        alert : 10,\n        popShow : true,\n        inputVal : \"\",\n        maxlength : 20,\n        backShow : false,\n        rightBtnText : \"계속하기\",\n        groupMain : \"\",\n      },\n      headerText : \"\",\n      modalShow : false,\n      listSelectBoxValue : \"\",\n      listSelectBoxList : [\n        {\n            text : \"가족이랑\",\n            value : \"가족이랑\",\n            checked : false,\n        },\n        {\n            text : \"친구들이랑\",\n            value : \"친구들이랑\",\n            checked : false,\n        },\n        {\n            text : \"그룹1\",\n            value : \"그룹1\",\n            checked : false,\n        },\n        {\n            text : \"그룹2\",\n            value : \"그룹2\",\n            checked : false,\n        },\n        {\n            text : \"그룹3\",\n            value : \"그룹3\",\n            checked : false,\n        },\n        {\n            text : \"그룹4\",\n            value : \"그룹4\",\n            checked : false,\n        },\n        {\n            text : \"그룹5\",\n            value : \"그룹5\",\n            checked : false,\n        },\n        {\n            text : \"그룹6\",\n            value : \"그룹6\",\n            checked : false,\n        },\n        {\n            text : \"그룹7\",\n            value : \"그룹7\",\n            checked : false,\n        },\n      ],\n      lnbOpen : false,\n      profile : {\n          name : \"홍길동\",\n          img : {\n              // src : require('@img/dummy-profile01.jpeg'),\n              // alt : '홍길동님의 프로필 사진입니다'\n              src : null,\n              alt : null\n          }\n      }\n    }\n  },\n  created(){},\n  mounted(){\n    this.checkePath(this.pageStatus);\n  },\n  methods : {\n    // Type2 : 계속하기 클릭 이벤트\n    clickRigntBtnEvent(){\n      console.log(\"clickRigntBtnEvent !!!!\")\n    },\n    // Type3 : reset Icon 클릭 이벤트\n    resetIconClick(){\n      console.log(\"reset Icon\")\n    },\n    // Type3 : 즐겨찾기 아이콘 클릭 이벤트\n    starIconClick(data){\n      console.log(data);\n      this.headerData.like = data.like;\n    },\n    // Type5 : 햄버거 메뉴 클릭\n    menuIconClickEv(){\n      this.lnbOpen = true;\n      console.log(\"햄버거 메뉴\")\n    },\n    // Type5, Type6 : 알림 아이콘 클릭\n    alertIconClick(){\n      console.log(\"alertIconClick !!!!\")\n    },\n    // Type6 : 그룹아이콘 클릭1\n    groupClicEv1(){\n      console.log(\"groupClicEv1 !!!!\")\n    },\n    // Type6 : 그룹아이콘 클릭2\n    groupClicEv2(){\n      console.log(\"groupClicEv2 !!!!\")\n    },\n    // 안심존 이름을 입력하세요 input enter event\n    maxInputEvent(val){\n      console.log(\"maxInputEvent : \",val)\n    },\n    // 헤더 타이틀 클릭 이벤트\n    titleClick(){\n      const path = this.$route.path \n      console.log(\"path : \",path)\n      if(path === '/groupMain'){\n        console.log(\"this.modalShow : \",this.modalShow)\n        this.modalShow = true;\n      }\n    },\n    // type5 일때 그룹명 클릭 시 이벤트\n    selectClick(){\n      const path = this.$route.path \n      console.log(\"path : \",path)\n      if(path === '/groupMain'){\n        console.log(\"this.modalShow : \",this.modalShow)\n        this.modalShow = true;\n      }\n    },\n    handleChange(sel){\n      console.log(\"sel : \",sel)\n      this.headerData.type = sel;\n    },\n    checkePath(path){\n      switch (path){\n        case \"accessRight\" :\n          this.headerData.type = \"type4\";\n          this.headerText = null;\n          break;\n        case \"batteryOff\" :\n          this.headerData.type = \"type6\";\n          this.headerText = \"\";\n          break;\n        case \"paymentView\" :\n          this.headerData.type = \"type4\";\n          this.headerText = \"\";\n          break;\n        case \"conditionsUse\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"\";\n          break;\n        case \"openSauceLicenses\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"오픈소스 라이센스\";\n          break;\n        case \"settingView\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"설정\";\n          break;\n        case \"faqView\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"FAQ\";\n          break;\n        case \"noticeView\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"공지사항\";\n          break;\n        case \"passwordChange\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"비밀번호 변경\";\n          break;\n        case \"birthChange\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"생일 변경\";\n          break;\n        case \"phoneChangeCheck\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"휴대폰 변경\";\n          break;\n        case \"phoneChange\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"휴대폰 변경\";\n          break;\n        case \"nameChange\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"이름 변경\";\n          break;\n        case \"myProfileEditPhoto\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"내 정보\";\n          break;\n        case \"sosDetail\" :\n          this.headerData.type = \"type4\";\n          this.headerText = \"\";\n          break;\n        case \"proximityAlertEdit\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"근접 알림 설정\";\n          break;\n        case \"proximityAlertEnter\" :\n          this.headerData.type = \"type2\";\n          this.headerText = \"근접 알림 등록\";\n          this.headerData.rightBtnText = \"저장\"\n          break;\n        case \"proximityAlertSetting\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"근접 알림 설정\";\n          break;\n        case \"safeZoneEidt\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"안심존 설정\";\n          break;\n        case \"safeZoneView\" :\n          this.headerData.type = \"type2\";\n          this.headerText = \"안심존 사용자 설정\";\n          this.headerData.rightBtnText = \"저장\"\n          break;\n        case \"searchAddress\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"주소 검색\";\n          break;\n        case \"createSafezone\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"안심존 설정\";\n          // this.headerData.rightBtnText = \"계속하기\"\n          break;\n        case \"safeZoneList\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"안심존 설정\";\n          break;\n        case \"removeGrodupCheckNumber\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"그룹 지우기\";\n          break;\n        case \"removeGroup\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"그룹 지우기\";\n          break;\n        case \"memberSetting\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"그룹 설정\";\n          break;\n        case \"sosSetting\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"SOS 설정​\";\n          break;\n        case \"batteryAlert\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"배터리 부족 알림\";\n          break;\n        case \"inactiveSensing\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"비활동 감지 기능 설정​\";\n          break;\n        case \"locationSharingStatus\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"위치 공유 상태\";\n          break;\n        case \"groupManagement\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"그룹관리\";\n          break;\n        case \"alertPage\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"알림함\";\n          break;\n        case \"recordLocation\" :\n          this.headerData.type = \"type1\";\n          this.headerText = \"위치 기록\";\n          break;\n        case \"locationSharingDoneTime\" :\n          this.headerData.type = \"type3\";\n          this.headerText = \"live.udiya.com\";\n          break;\n        case \"locationSharing\" :\n          this.headerData.type = \"type3\";\n          this.headerText = \"live.udiya.com\";\n          break;\n        case \"locationDetail\" :\n          this.headerData.type = \"type4\";\n          this.headerText = \"\";\n          break;\n        case \"groupMainFirst\" :\n          this.headerData.type = \"type6\";\n          this.headerText = \"\";\n          break;\n        case \"groupMain\" :\n          this.headerData.groupText = \"그룹1\";\n          this.headerData.type = \"type5\";\n          this.headerText = \"그룹1\";\n          break;\n        default : \n          this.headerData.type = \"type1\";\n          this.headerText = \"\";\n          break;\n      }\n    },\n    // 모달 그룹선택 셀럭트 박스 list 클릭 이벤트\n    listSelectBoxListClick(){\n      console.log(\"this.listSelectBoxValue : \",this.listSelectBoxValue)\n      const checkedList = this.listSelectBoxList.find((l)=>l.value === this.listSelectBoxValue);\n      this.headerData.groupText = checkedList.value\n      console.log(\"checkedList : \",checkedList)\n      this.modalShow = false;\n    },\n    // 모달 그룹선택 셀럭트 박스 그룹 만들기 버튼 이번트\n    listSelectBoxBtnClick(){\n      this.modalShow = false;\n      this.$router.push(\"/createdGroup\")\n    },\n  },\n  watch : {\n    $route(to) {\n      let path = (to.fullPath.replace(/(^\\/)/,'') === \"\")?\"listPage\":to.fullPath.replace(/(^\\/)/,'');\n      this.$store.state.pageStatus = path;\n    },\n    pageStatus(n,o){\n      if(n !== o) this.checkePath(n);\n    },\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  height:100%;\n}\n.app-wrapper{\n  display:flex;\n  flex-direction:column;\n  height:100%;\n  overflow:auto;\n  #content{\n    flex:1;\n    overflow:auto;\n    /* &[page=listPage], &[page=GuideDesign], &[page=GuideHeader]{\n      overflow:auto;\n    } */\n  }\n}\n</style>\n"],"mappings":";;mBAAA;;;;;;;;uBACEA,mBAAA,CA2BM;IA3BDC,KAAK,EADZC,eAAA,EACa,aAAa;MAAAC,GAAA,EAAeC,IAAA,CAAAD;IAAG;MACtBE,QAAA,CAAAC,WAAW,I,cAA7BC,YAAA,CAAiCC,qBAAA;IAFrCC,GAAA;EAAA,MAAAC,mBAAA,gBAGsBL,QAAA,CAAAM,SAAS,I,cAA3BJ,YAAA,CAgBaK,qBAAA;IAnBjBH,GAAA;IAIOI,KAAK,EAAET,IAAA,CAAAU,UAAU;IACjBC,iBAAe,EAAEV,QAAA,CAAAW,eAAe;IAChCC,gBAAc,EAAEZ,QAAA,CAAAa,cAAc;IAC9BC,eAAa,EAAEd,QAAA,CAAAe,aAAa;IAC5BC,oBAAkB,EAAEhB,QAAA,CAAAiB,kBAAkB;IACtCC,gBAAc,EAAElB,QAAA,CAAAmB,cAAc;IAC9BC,cAAY,EAAEpB,QAAA,CAAAqB,YAAY;IAC1BC,cAAY,EAAEtB,QAAA,CAAAuB,YAAY;IAC1BC,eAAa,EAAExB,QAAA,CAAAyB,aAAa;IAC5BC,YAAU,EAAE1B,QAAA,CAAA2B,UAAU;IACtBC,aAAW,EAAE5B,QAAA,CAAA6B;;IAEHC,KAAK,EAAAC,QAAA,CACd,MAAgB,CAjBxBC,gBAAA,CAAAC,gBAAA,CAiBWlC,IAAA,CAAAmC,UAAU,iB;IAjBrBC,CAAA;kOAAA9B,mBAAA,gBAoBI+B,YAAA,CAAoDC,iBAAA;IAApCC,IAAI,EAAEvC,IAAA,CAAAwC,OAAO;IApBjC,iBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoB0B1C,IAAA,CAAAwC,OAAO,GAAAE,MAAA;IAAGC,OAAO,EAAE3C,IAAA,CAAA2C;gDACzCC,mBAAA,CAEM;IAFDC,EAAE,EAAC,SAAS;IAAEC,IAAI,EAAE7C,QAAA,CAAA8C;MACvBV,YAAA,CAAeW,sBAAA,E,iBAtBrBC,UAAA,GAwBI3C,mBAAA,WAAc,EACd+B,YAAA,CAEWa,mBAAA;IAFOC,SAAS,EAAEnD,IAAA,CAAAmD,SAAS;IAzB1C,sBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyBiC1C,IAAA,CAAAmD,SAAS,GAAAT,MAAA;IAAGU,OAAO,EAAE;;IAzBtDC,OAAA,EAAArB,QAAA,CA0BM,MAA+M,CAA/MK,YAAA,CAA+MiB,wBAAA;MAAxL7C,KAAK,EAAET,IAAA,CAAAuD,kBAAkB;MA1BtD,kBAAAd,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0BoC1C,IAAA,CAAAuD,kBAAkB,GAAAb,MAAA;MAAEX,KAAK,EAAC,aAAa;MAACyB,UAAU,EAAC,UAAU;MAAEC,OAAO,EAAE,KAAK;MAAGC,IAAI,EAAE1D,IAAA,CAAA2D,iBAAiB;MAAGC,WAAS,EAAE3D,QAAA,CAAA4D,sBAAsB;MAAGC,UAAQ,EAAE7D,QAAA,CAAA8D;;IA1B5L3B,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}