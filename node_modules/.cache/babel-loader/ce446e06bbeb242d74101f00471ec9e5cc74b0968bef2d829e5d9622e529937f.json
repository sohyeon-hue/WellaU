{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { useModel as _useModel, mergeModels as _mergeModels } from 'vue';\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-select-box-list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nimport { computed, watch } from 'vue';\nexport default {\n  __name: 'ListSelectBox',\n  props: /*@__PURE__*/_mergeModels({\n    value: {\n      type: String,\n      default: () => {\n        return null;\n      }\n    },\n    size: {\n      type: String,\n      default: () => {\n        return null;\n      }\n    },\n    list: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    outLine: {\n      type: Boolean,\n      default: () => {\n        return true;\n      }\n    }\n  }, {\n    \"value\": {},\n    \"valueModifiers\": {}\n  }),\n  emits: /*@__PURE__*/_mergeModels([\"btnClick\", \"listClick\"], [\"update:value\"]),\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    const emits = __emit;\n    const model = _useModel(__props, \"value\");\n    console.log(\"props : \", props);\n    const listSelectBoxStyle = computed(() => {\n      const style = {};\n      if (props.size) {\n        style.width = props.size;\n      }\n      if (props.outLine === false) {\n        style.border = \"none\";\n      }\n      return style;\n    });\n    const listClick = list => {\n      model.value = list.value;\n      emits(\"listClick\", list.value);\n    };\n    const btnClick = () => {\n      emits(\"btnClick\");\n    };\n    watch(() => props.value, n => {\n      props.list.forEach(l => {\n        if (l.value === n) {\n          l.checked = true;\n        } else {\n          l.checked = false;\n        }\n      });\n    }, {\n      immediate: true\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"list-select-box\",\n        style: _normalizeStyle(listSelectBoxStyle.value)\n      }, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n        class: \"list-select-box-tit\"\n      }, \"그룹을 선택해주세요.\", -1)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.list, (list, index) => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: 'list_' + index,\n          class: _normalizeClass({\n            checked: list.checked\n          }),\n          onClick: $event => listClick(list, index)\n        }, _toDisplayString(list.text), 11, _hoisted_2);\n      }), 128))])]), _createElementVNode(\"div\", {\n        class: \"list-select-box-btn\",\n        onClick: _withModifiers(btnClick, [\"stop\"])\n      }, \" + 그룹 만들기 \")], 4);\n    };\n  }\n};","map":{"version":3,"names":["computed","watch","props","__props","emits","__emit","model","_useModel","console","log","listSelectBoxStyle","style","size","width","outLine","border","listClick","list","value","btnClick","n","forEach","l","checked","immediate"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/components/Global/ListSelectBox.vue"],"sourcesContent":["<template>\n    <div class=\"list-select-box\" :style=\"listSelectBoxStyle\">\n        <div class=\"list-select-box-tit\">그룹을 선택해주세요.</div>\n        <div class=\"list-select-box-list\">\n            <ul>\n                <li v-for=\"(list,index) in props.list\" :key=\"'list_'+index\" :class=\"{checked:list.checked}\" @click=\"listClick(list,index)\">{{list.text}}</li>\n            </ul>\n        </div>\n        <div class=\"list-select-box-btn\" @click.stop=\"btnClick\">\n            + 그룹 만들기\n        </div>\n    </div>\n</template>\n<script setup>\n    import { computed,watch,defineProps,defineModel,defineEmits } from 'vue'\n    const props = defineProps({\n        value : {\n            type : String,\n            default : ()=>{\n                return null;\n            }\n        },\n        size : {\n            type : String,\n            default : ()=>{\n                return null;\n            }\n        },\n        list : {\n            type : Array,\n            default : ()=>{\n                return []\n            }\n        },\n        outLine : {\n            type : Boolean,\n            default : ()=>{\n                return true;\n            }\n        }\n    })\n    const emits = defineEmits([\"btnClick\",\"listClick\"])\n    const model = defineModel(\"value\")\n    console.log(\"props : \",props)\n\n    const listSelectBoxStyle = computed(()=>{\n        const style = {};\n        if(props.size){\n            style.width = props.size\n        }\n        if(props.outLine === false){\n            style.border = \"none\";\n        }\n        return style;\n    })\n\n    const listClick = (list)=>{\n        model.value = list.value;\n        emits(\"listClick\",list.value);\n    }\n    const btnClick = ()=>{\n        emits(\"btnClick\")\n    }\n    watch(()=>props.value,(n)=>{\n        props.list.forEach((l)=>{\n            if(l.value === n){\n                l.checked = true;\n            }else{\n                l.checked = false;\n            }\n        })\n    },{immediate : true})\n</script>\n<style type=\"scss\" scoped>\n    .list-select-box{\n        display:inline-block;\n        width:100%;\n        border:1rem solid #ededed;;\n    }\n    .list-select-box-tit{\n        display:flex;\n        align-items:center;\n        justify-content:center;\n        height:40rem;\n        font-size:16rem;\n        line-height:1;\n        border-bottom:1rem solid #ededed;\n    }\n    .list-select-box-list{\n        max-height:110rem;\n        overflow:auto;\n        &> ul{\n            padding:10rem 0;\n            margin:0;\n            &> li{\n                display:flex;\n                align-items:center;\n                height: 30rem;\n                padding:0 0 0 10rem;\n                font-size:12rem;\n                line-height:1;\n                &.checked{\n                    background:skyblue;\n                }\n            }\n        }\n    }\n    .list-select-box-btn{\n        display:flex;\n        align-items:center;\n        justify-content:center;\n        height:40rem;\n        border-top:1px solid #ededed;\n    }\n</style>"],"mappings":";;;;;;;;AAcI,SAASA,QAAQ,EAACC,KAAyC,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACvE,MAAMC,KAAK,GAAGC,OAAA;IA0Bd,MAAMC,KAAK,GAAGC,MAAA;IACd,MAAMC,KAAK,GAAGC,SAAW,CAAAJ,OAAA,EAAC,OAAO;IACjCK,OAAO,CAACC,GAAG,CAAC,UAAU,EAACP,KAAK;IAE5B,MAAMQ,kBAAkB,GAAGV,QAAQ,CAAC,MAAI;MACpC,MAAMW,KAAK,GAAG,CAAC,CAAC;MAChB,IAAGT,KAAK,CAACU,IAAI,EAAC;QACVD,KAAK,CAACE,KAAK,GAAGX,KAAK,CAACU,IAAG;MAC3B;MACA,IAAGV,KAAK,CAACY,OAAO,KAAK,KAAK,EAAC;QACvBH,KAAK,CAACI,MAAM,GAAG,MAAM;MACzB;MACA,OAAOJ,KAAK;IAChB,CAAC;IAED,MAAMK,SAAS,GAAIC,IAAI,IAAG;MACtBX,KAAK,CAACY,KAAK,GAAGD,IAAI,CAACC,KAAK;MACxBd,KAAK,CAAC,WAAW,EAACa,IAAI,CAACC,KAAK,CAAC;IACjC;IACA,MAAMC,QAAQ,GAAGA,CAAA,KAAI;MACjBf,KAAK,CAAC,UAAU;IACpB;IACAH,KAAK,CAAC,MAAIC,KAAK,CAACgB,KAAK,EAAEE,CAAC,IAAG;MACvBlB,KAAK,CAACe,IAAI,CAACI,OAAO,CAAEC,CAAC,IAAG;QACpB,IAAGA,CAAC,CAACJ,KAAK,KAAKE,CAAC,EAAC;UACbE,CAAC,CAACC,OAAO,GAAG,IAAI;QACpB,CAAC,MAAI;UACDD,CAAC,CAACC,OAAO,GAAG,KAAK;QACrB;MACJ,CAAC;IACL,CAAC,EAAC;MAACC,SAAS,EAAG;IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}