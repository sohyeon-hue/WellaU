{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"listWrap\"\n};\nconst _hoisted_2 = {\n  cellspacing: \"0\",\n  cellapdding: \"0\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"top\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  cellspacing: \"0\",\n  cellapdding: \"0\"\n};\nconst _hoisted_6 = [\"onClick\"];\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport pageListData from './pageList';\nimport pageListData2 from './pageList2';\nexport default {\n  __name: 'pageListView',\n  setup(__props) {\n    const pageList = ref(pageListData);\n    const pageList2 = ref(pageListData2);\n    const categoryLine = index => {\n      let temp = \"\";\n      const index2 = index - 1;\n      if (index > 0 && pageList.value[index2].category !== pageList.value[index].category) {\n        temp = \"categoryLine\";\n      }\n      return temp;\n    };\n    const router = useRouter();\n    const trClick = path => {\n      router.push(path);\n    };\n    const success = ref(pageListData.filter(a => a.status === '완료').length);\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"colgroup\", null, [_createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      })], -1)), _cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \" 카테고리 \"), _createElementVNode(\"th\", null, \" OS \"), _createElementVNode(\"th\", null, \" 이름 \"), _createElementVNode(\"th\", null, \" Path \")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(pageList2.value, (page, index) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: 'list' + index,\n          class: _normalizeClass(categoryLine(index)),\n          onClick: $event => trClick(page.path)\n        }, [_createElementVNode(\"td\", null, _toDisplayString(page.category), 1), _createElementVNode(\"td\", null, _toDisplayString(page.os), 1), _createElementVNode(\"td\", null, _toDisplayString(page.name), 1), _createElementVNode(\"td\", null, _toDisplayString(page.path), 1)], 10, _hoisted_3);\n      }), 128))])]), false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"버전 : v1.15, 총 페이지 : \" + _toDisplayString(pageList.value.length) + \" 완료 : \" + _toDisplayString(success.value) + \" 진행율 : \" + _toDisplayString((success.value / (pageList.value.length * 0.01)).toFixed(1)) + \"%\", 1)) : _createCommentVNode(\"\", true), false ? (_openBlock(), _createElementBlock(\"table\", _hoisted_5, [_cache[2] || (_cache[2] = _createElementVNode(\"colgroup\", null, [_createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"10%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"20%\"\n        }\n      }), _createElementVNode(\"col\", {\n        style: {\n          \"width\": \"10%\"\n        }\n      })], -1)), _cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \" 카테고리 \"), _createElementVNode(\"th\", null, \" OS \"), _createElementVNode(\"th\", null, \" 이름 \"), _createElementVNode(\"th\", null, \" 피피티 번호 \"), _createElementVNode(\"th\", null, \" Path \"), _createElementVNode(\"th\", null, \" 완료 \")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(pageList.value, (page, index) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: 'list' + index,\n          class: _normalizeClass(categoryLine(index)),\n          onClick: $event => trClick(page.path)\n        }, [_createElementVNode(\"td\", null, _toDisplayString(page.category), 1), _createElementVNode(\"td\", null, _toDisplayString(page.os), 1), _createElementVNode(\"td\", null, _toDisplayString(page.name), 1), _createElementVNode(\"td\", null, _toDisplayString(page.page), 1), _createElementVNode(\"td\", null, _toDisplayString(page.path), 1), _createElementVNode(\"td\", null, _toDisplayString(page.status ? page.status : \"-\"), 1)], 10, _hoisted_6);\n      }), 128))])])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","pageListData","pageListData2","pageList","pageList2","categoryLine","index","temp","index2","value","category","router","trClick","path","push","success","filter","a","status","length"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pageListView.vue"],"sourcesContent":["<template>\n    <div class=\"listWrap\">\n        <table cellspacing=\"0\" cellapdding=\"0\">\n            <colgroup>\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <!-- <col style=\"width:10%\" /> -->\n                <col style=\"width:20%\" />\n                <!-- <col style=\"width:10%\" /> -->\n            </colgroup>\n            <thead>\n                <tr>\n                    <th>\n                        카테고리\n                    </th>\n                    <th>\n                        OS\n                    </th>\n                    <th>\n                        이름\n                    </th>\n                    <!-- <th>\n                        피피티 번호\n                    </th> -->\n                    <th>\n                        Path\n                    </th>\n                    <!-- <th>\n                        완료\n                    </th> -->\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(page,index) in pageList2\" :key=\"'list' + index\" :class=\"categoryLine(index)\" @click=\"trClick(page.path)\">\n                    <td>\n                        {{page.category}}\n                    </td>\n                    <td>\n                        {{page.os}}\n                    </td>\n                    <td>\n                        {{page.name}}\n                    </td>\n                    <!-- <td>\n                        {{page.page}}\n                    </td> -->\n                    <td>\n                        {{page.path}}\n                    </td>\n                    <!-- <td>\n                        {{page.status ? page.status : \"-\"}}\n                    </td> -->\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"top\" v-if=\"false\">버전 : v1.15, 총 페이지 : {{pageList.length}} 완료 : {{success}} 진행율 : {{(success / (pageList.length * 0.01)).toFixed(1)}}%</div>\n        <table cellspacing=\"0\" cellapdding=\"0\" v-if=\"false\">\n            <colgroup>\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:10%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:10%\" />\n            </colgroup>\n            <thead>\n                <tr>\n                    <th>\n                        카테고리\n                    </th>\n                    <th>\n                        OS\n                    </th>\n                    <th>\n                        이름\n                    </th>\n                    <th>\n                        피피티 번호\n                    </th>\n                    <th>\n                        Path\n                    </th>\n                    <th>\n                        완료\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(page,index) in pageList\" :key=\"'list' + index\" :class=\"categoryLine(index)\" @click=\"trClick(page.path)\">\n                    <td>\n                        {{page.category}}\n                    </td>\n                    <td>\n                        {{page.os}}\n                    </td>\n                    <td>\n                        {{page.name}}\n                    </td>\n                    <td>\n                        {{page.page}}\n                    </td>\n                    <td>\n                        {{page.path}}\n                    </td>\n                    <td>\n                        {{page.status ? page.status : \"-\"}}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n<script setup>\n    import { ref } from 'vue'\n    import { useRouter } from 'vue-router'\n    import pageListData from './pageList'\n    import pageListData2 from './pageList2'\n\n    const pageList = ref(pageListData)\n    const pageList2 = ref(pageListData2)\n    const categoryLine = (index)=>{\n        let temp = \"\";\n        const index2 = index - 1;\n        if(index > 0 && pageList.value[index2].category !== pageList.value[index].category){\n            temp = \"categoryLine\"\n        }\n        return temp;\n    }\n    const router = useRouter();\n    const trClick = (path)=>{\n        router.push(path);\n    }\n    const success = ref(pageListData.filter(a => a.status === '완료').length);\n</script>\n<style type=\"scss\" scoped>\n    .listWrap{\n        padding:10rem 0 10rem 0;\n        background:rgba(0,0,0,0.7);\n    }\n    table{\n        width:calc(100% - 20rem);\n        margin:0 auto;\n        font-size:12rem;\n        border-collapse:collapse;\n        td, th{\n            border:1px solid rgba(255,255,255,0.15);\n        }\n        thead{\n            th, td{\n                height:40rem;\n                font-weight:bold;\n                color:#ccc;\n                background:rgba(0,0,0,0.55);\n            }\n        }\n        tbody{\n            td{\n                padding:10rem;\n                font-size:15rem;\n                color:#fff;\n                word-break:break-all;\n                background:rgba(0,0,0,0.35);\n                &:first-child{\n                    text-align:center;\n                }\n            }\n        }\n    }\n    .categoryLine{\n        border-top:2rem double rgba(255,255,255,0.5);\n    }\n    .top{\n        padding:10rem;\n        font-size:14rem;\n        text-align:right;\n        color:rgba(255,255,255,0.8);\n    }\n    .subTit{\n        padding:10rem;\n        font-size:14rem;\n        text-align:right;\n        color:rgba(255,255,255,0.8);\n    }\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAkHI,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,SAAS,QAAQ,YAAW;AACrC,OAAOC,YAAY,MAAM,YAAW;AACpC,OAAOC,aAAa,MAAM,aAAY;;;;IAEtC,MAAMC,QAAQ,GAAGJ,GAAG,CAACE,YAAY;IACjC,MAAMG,SAAS,GAAGL,GAAG,CAACG,aAAa;IACnC,MAAMG,YAAY,GAAIC,KAAK,IAAG;MAC1B,IAAIC,IAAI,GAAG,EAAE;MACb,MAAMC,MAAM,GAAGF,KAAK,GAAG,CAAC;MACxB,IAAGA,KAAK,GAAG,CAAC,IAAIH,QAAQ,CAACM,KAAK,CAACD,MAAM,CAAC,CAACE,QAAQ,KAAKP,QAAQ,CAACM,KAAK,CAACH,KAAK,CAAC,CAACI,QAAQ,EAAC;QAC/EH,IAAI,GAAG,cAAa;MACxB;MACA,OAAOA,IAAI;IACf;IACA,MAAMI,MAAM,GAAGX,SAAS,CAAC,CAAC;IAC1B,MAAMY,OAAO,GAAIC,IAAI,IAAG;MACpBF,MAAM,CAACG,IAAI,CAACD,IAAI,CAAC;IACrB;IACA,MAAME,OAAO,GAAGhB,GAAG,CAACE,YAAY,CAACe,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,IAAI,CAAC,CAACC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}