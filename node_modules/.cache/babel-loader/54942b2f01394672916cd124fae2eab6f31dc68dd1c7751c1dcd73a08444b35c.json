{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, withModifiers as _withModifiers, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"bothBar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"bothBar-wrapper\", [{\n      deem: $setup.deemShow\n    }]]),\n    style: _normalizeStyle($setup.bothBarWrapperStyle)\n  }, [_createElementVNode(\"div\", {\n    class: \"bothBar-thumn\",\n    onTouchstart: $setup.touchStart,\n    onTouchmove: $setup.touchMoved,\n    onTouchend: $setup.touchEnd\n  }, \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", {\n    class: \"bothBar-content\",\n    onTouchstart: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"])),\n    onTouchmove: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"])),\n    onTouchend: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_renderSlot(_ctx.$slots, \"content\", {}, undefined, true)], 32 /* NEED_HYDRATION */)], 6 /* CLASS, STYLE */)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","class","_normalizeClass","deem","$setup","deemShow","style","_normalizeStyle","bothBarWrapperStyle","onTouchstart","touchStart","onTouchmove","touchMoved","onTouchend","touchEnd","_cache","_withModifiers","_renderSlot","_ctx","$slots","undefined"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/components/Global/BothBar.vue"],"sourcesContent":["<template>\n    <div id=\"bothBar\">\n        <div class=\"bothBar-wrapper\" :class=[{deem:deemShow}] :style=\"bothBarWrapperStyle\">\n            <div class=\"bothBar-thumn\" @touchstart=\"touchStart\" @touchmove=\"touchMoved\" @touchend=\"touchEnd\" >xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</div>\n            <div class=\"bothBar-content\" @touchstart.stop @touchmove.stop @touchend.stop>\n                <slot name=\"content\">\n                </slot>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\n    import { ref,computed,defineProps } from 'vue'\n\n    const props = defineProps({\n        maxHeightDiffer : {\n            type : Number,\n            default : ()=>{\n                return 70\n            }\n        }\n    })\n\n    const points = ref({s:-1,e:-1,h:163,min:0,cuh:0});\n    const toutchTargetChecked = ref(false);\n    const swiperChecked = ref({time:null,arr:[],type:null,first:null});\n    const minHeight = 163;\n    const maxHeight = window.innerHeight - props.maxHeightDiffer;\n    const deemShow = ref(false);\n\n\n    let animationTimer = null;\n    const targetChecked = (target)=>{\n        const etcParentClass = ['.step-box'];\n        let etParentCheck = false;\n        etcParentClass.forEach((checkClass)=>{\n            if(target.closest(checkClass)) etParentCheck = true;\n        })\n        const tagArr = ['a','button','select','input'];\n        const targetTag = (target.tagName) ? target.tagName.toLowerCase() : null;\n        const parentTag = (target.parentNode && target.parentNode.tagName) ? target.parentNode.tagName.toLowerCase() : null;\n        let tagChecked = (tagArr.indexOf(targetTag) >= 0) ? tagArr.indexOf(targetTag) : (tagArr.indexOf(parentTag) >= 0) ? tagArr.indexOf(parentTag) : -1; \n        if(tagChecked === tagArr.length - 1){\n            tagChecked = -1\n            const inputType = ['button','checkbox','radio'];\n            if(tagArr.indexOf(targetTag) === tagArr.length - 1){\n                if(inputType.indexOf(target.type) >= 0) tagChecked = tagArr.length - 1;\n            }\n            if(tagArr.indexOf(parentTag) === tagArr.length - 1){\n                if(inputType.indexOf(target.parentNode.type) >= 0) tagChecked = tagArr.length - 1;\n            }\n        }\n        const cl = target.getAttribute(\"class\");\n        const checked = (cl)?cl.match(/ant-/g):null;\n        const parent = (target.parentNode)?target.parentNode:null;\n        const parentCl = (parent && parent.getAttribute(\"class\"))?parent.getAttribute(\"class\"):null;\n        const parehtChecked = (parentCl)?parentCl.match(/ant-/g):null;\n        // true 리턴 시 터치 이벤트 막기\n        return checked || parehtChecked || tagChecked >= 0 || etParentCheck ? true : false;\n    }\n    const touchStart = ($ev)=>{\n        toutchTargetChecked.value = targetChecked($ev.target);\n        points.value.s = $ev.targetTouches[0].pageY;\n        if(!swiperChecked.value.first) swiperChecked.value.first = points.value.h;\n        points.value.cuh = points.value.h;\n        if(!toutchTargetChecked.value){\n            clearInterval(animationTimer);\n            $ev.preventDefault();\n            swiperChecked.value.arr[0] = $ev.targetTouches[0].pageY\n            swiperChecked.value.time = new Date().getTime();\n        }\n    }\n    const touchMoved = ($ev)=>{\n        deemShow.value =  true;\n        if(toutchTargetChecked.value){\n            deemShow.value =  false;\n            return\n        }\n        const touchPoint = $ev.targetTouches[0].pageY;\n        const diff = points.value.s - touchPoint;\n        const calc = points.value.cuh + diff;\n        const price = (maxHeight < calc) ? maxHeight : (minHeight > calc) ? minHeight : calc\n        points.value.h = price;\n        if(touchPoint < swiperChecked.value.arr[0] && swiperChecked.value.type === null){\n            swiperChecked.value.type = \"up\"\n        }else if(swiperChecked.value.type === null){\n            swiperChecked.value.type = \"down\"\n        }\n        if(swiperChecked.value.type === \"down\"){\n            if(swiperChecked.value.arr.length == 1 || swiperChecked.value.arr[1] < touchPoint){\n                swiperChecked.value.arr[1] = touchPoint;\n            }else if(swiperChecked.value.arr[1] > touchPoint){\n                swiperChecked.value.arr[0] = touchPoint;\n                swiperChecked.value.arr[1] = touchPoint;\n                swiperChecked.value.time = new Date().getTime();\n                swiperChecked.value.type = \"up\"\n            }\n        }else{\n            if(swiperChecked.value.arr.length == 1 || swiperChecked.value.arr[1] > touchPoint){\n                swiperChecked.value.arr[1] = touchPoint;\n            }else if(swiperChecked.value.arr[1] < touchPoint){\n                swiperChecked.value.arr[0] = touchPoint;\n                swiperChecked.value.arr[1] = touchPoint;\n                swiperChecked.value.time = new Date().getTime();\n                swiperChecked.value.type = \"down\"\n            }\n\n        }\n    }\n    const touchEnd = ()=>{\n        points.value.s = -1;\n        if(toutchTargetChecked.value) return\n        const endTime = new Date().getTime();\n        const distance = (swiperChecked.value.type === 'up') ? swiperChecked.value.arr[0] - swiperChecked.value.arr[1] : swiperChecked.value.arr[1] - swiperChecked.value.arr[0] ;\n        const checkTime = endTime - swiperChecked.value.time;\n        if(checkTime <= 250 && distance > 20){\n            switch (swiperChecked.value.type) {\n                case \"up\" :\n                    // points.value.h = maxHeight;\n                    animation(points.value.h, maxHeight)\n                    swiperChecked.value.first = maxHeight;\n                    break;\n                default : \n                    // points.value.h = minHeight;\n                    animation(points.value.h, minHeight)\n                    swiperChecked.value.first = minHeight;\n                    break;\n            }\n        }else if((points.value.h !== minHeight && swiperChecked.value.type === 'down') || (points.value.h !== maxHeight && swiperChecked.value.type === 'up')){\n            // points.value.h = swiperChecked.value.first;\n            animation(points.value.h, swiperChecked.value.first)\n        }\n        swiperChecked.value.arr = [];\n        swiperChecked.value.type = null;\n        swiperChecked.value.time = null;\n        // swiperChecked.value.first = null;\n        \n    }\n    const animation = (s,e)=>{\n        if(!animationTimer) clearInterval(animationTimer);\n        if(s === e) return;\n        const interValTime = 10;\n        const dis = (s > e) ? s - e : e - s;\n        const maxDistance = window.innerHeight - 200;\n        const maxTime = 500;\n        const oneTime = maxDistance / (maxTime / interValTime);\n        const totalTime = (dis / oneTime) * interValTime;\n        const len = totalTime / interValTime;\n        const step = dis / len\n        animationTimer = setInterval(()=>{\n            let priceHeight;\n            if(s < e){\n                priceHeight = (points.value.h + step >= e) ? e : points.value.h + step\n            }else{\n                priceHeight = (points.value.h - step <= e) ? e : points.value.h - step\n            }\n            points.value.h = priceHeight;\n            if((priceHeight >= e && s < e) || (priceHeight <= e && s > e)){\n                clearInterval(animationTimer)\n                deemShow.value =  false;\n            }\n        },interValTime)\n    }\n    const bothBarWrapperStyle = computed(()=>{\n        const style = {};\n        style.height = points.value.h + \"rem\";\n        return style\n    })\n</script>\n<style type=\"scss\" scoped>\n    #bothBar{\n        position:relative;\n        height:150rem;\n        background:transparent;\n    }\n    .bothBar-wrapper{\n        position:absolute;\n        bottom:0;\n        left:0;\n        right:0;\n        max-height:calc(100vh - 70rem);\n        /* min-height:100rem; */\n        display:flex;\n        flex-direction:column;\n        overflow:hidden;\n        border-radius:18rem 18rem 0 0;\n        background:#fff;\n        &.deem{\n            &:after{\n                content:\"\";\n                position:absolute;\n                top:0;\n                left:0;\n                right:0;\n                bottom:0;\n                background:rgba(0,0,0,0);\n            }\n        }\n    }\n    .bothBar-thumn{\n        position:relative;\n        height:42rem;\n        /* background:#000; */\n        &:after{\n            content:\"\";\n            position:absolute;\n            top:7rem;\n            left:50%;\n            z-index:100;\n            width:40rem;\n            height:5rem;\n            border-radius:5rem;\n            transform:translate(-50%,0);\n            background:#ededed;\n        }\n    }\n    .bothBar-content{\n        flex:1;\n        padding:0;\n        overflow:auto;\n        -webkit-overflow-scrolling: touch;\n    }\n    .bothBar-deem{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,0);\n    }\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAS;;uBAAjBC,mBAAA,CAQM,OARNC,UAQM,GAPFC,mBAAA,CAMM;IANDC,KAAK,EAFlBC,eAAA,EAEmB,iBAAiB;MAAAC,IAAA,EAAeC,MAAA,CAAAC;IAAQ;IAAIC,KAAK,EAFpEC,eAAA,CAEsEH,MAAA,CAAAI,mBAAmB;MAC7ER,mBAAA,CAA2I;IAAtIC,KAAK,EAAC,eAAe;IAAEQ,YAAU,EAAEL,MAAA,CAAAM,UAAU;IAAGC,WAAS,EAAEP,MAAA,CAAAQ,UAAU;IAAGC,UAAQ,EAAET,MAAA,CAAAU;KAAW,qCAAmC,4BACrId,mBAAA,CAGM;IAHDC,KAAK,EAAC,iBAAiB;IAAEQ,YAAU,EAAAM,MAAA,QAAAA,MAAA,MAJpDC,cAAA,CAIyC,QAAgB;IAAEL,WAAS,EAAAI,MAAA,QAAAA,MAAA,MAJpEC,cAAA,CAI0D,QAAe;IAAEH,UAAQ,EAAAE,MAAA,QAAAA,MAAA,MAJnFC,cAAA,CAI0E,QAAc;MACxEC,WAAA,CACOC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}