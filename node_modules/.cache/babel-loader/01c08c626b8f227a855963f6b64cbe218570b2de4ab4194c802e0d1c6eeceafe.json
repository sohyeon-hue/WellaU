{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content-wrapper onePage\"\n};\nconst _hoisted_2 = {\n  class: \"content-scroll\"\n};\nconst _hoisted_3 = {\n  class: \"content-scroll-padding-box\"\n};\nconst _hoisted_4 = {\n  class: \"menu-list-value-input\"\n};\nconst _hoisted_5 = {\n  class: \"modal-content\"\n};\nconst _hoisted_6 = {\n  class: \"btn-set horizontal\"\n};\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'groupManagement',\n  setup(__props) {\n    const msg = ref([\"정말로 [그룹1] 을 나가시겠습니까?\", \"[그룹1] 에서 나가셨습니다.\"]);\n    const type = ref(0);\n    const router = useRouter();\n    const gotoMenu = path => {\n      router.push(path);\n    };\n    const leaveGroup = () => {\n      type.value = 0;\n      ModalShow.value = true;\n    };\n    const ModalShow = ref(false);\n    const modalClose = () => {\n      ModalShow.value = false;\n      setTimeout(() => {\n        if (type.value === 1) type.value = 0;\n      }, 500);\n    };\n    const leaveCheckGroup = () => {\n      ModalShow.value = false;\n      setTimeout(() => {\n        type.value = 1;\n        ModalShow.value = true;\n      }, 500);\n    };\n    return (_ctx, _cache) => {\n      const _component_a_button = _resolveComponent(\"a-button\");\n      const _component_a_modal = _resolveComponent(\"a-modal\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n        class: \"menu\",\n        onClick: _cache[0] || (_cache[0] = $event => gotoMenu('/locationSharingStatus'))\n      }, \"위치 공유 상태 보기\"), _createElementVNode(\"div\", {\n        class: \"menu\",\n        onClick: _cache[1] || (_cache[1] = $event => gotoMenu('/'))\n      }, \"그룹 초대 하기\"), _createElementVNode(\"div\", {\n        class: \"menu\",\n        onClick: _cache[2] || (_cache[2] = $event => gotoMenu('/createSafezone'))\n      }, \"안심존 설정\"), _createElementVNode(\"div\", {\n        class: \"menu\",\n        onClick: _cache[3] || (_cache[3] = $event => gotoMenu('/inactiveSensing'))\n      }, \"비활동 감지 기능 설정\"), _createElementVNode(\"div\", {\n        class: \"menu\",\n        onClick: _cache[4] || (_cache[4] = $event => gotoMenu('/batteryAlert'))\n      }, \"배터리 부족 알림 설정\"), _createElementVNode(\"div\", {\n        class: \"menu\",\n        onClick: _cache[5] || (_cache[5] = $event => gotoMenu('/sosSetting'))\n      }, \"SOS 설정\"), _createElementVNode(\"div\", {\n        class: \"menu\",\n        onClick: leaveGroup\n      }, \"그룹 나가기\")])])]), _createVNode(_component_a_modal, {\n        modal: \"\",\n        open: ModalShow.value,\n        \"onUpdate:open\": _cache[6] || (_cache[6] = $event => ModalShow.value = $event),\n        title: \"\",\n        class: \"wellau-modal\"\n      }, {\n        footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_a_button, {\n          class: \"width100per\",\n          onClick: modalClose\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(type.value === 0 ? '취소' : '확인'), 1)]),\n          _: 1\n        }), type.value === 0 ? (_openBlock(), _createBlock(_component_a_button, {\n          key: 0,\n          class: \"width100per\",\n          onClick: leaveCheckGroup\n        }, {\n          default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"나가기\")])),\n          _: 1\n        })) : _createCommentVNode(\"\", true)])]),\n        default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_5, _toDisplayString(msg.value[type.value]), 1)]),\n        _: 1\n      }, 8, [\"open\"])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","msg","type","router","gotoMenu","path","push","leaveGroup","value","ModalShow","modalClose","setTimeout","leaveCheckGroup"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pages/groupManagement.vue"],"sourcesContent":["<template>\n    <div class=\"content-wrapper onePage\">\n        <div class=\"content-scroll\">\n            <div class=\"content-scroll-padding-box\">\n                <div class=\"menu-list-value-input\">\n                    <div class=\"menu\" @click=\"gotoMenu('/locationSharingStatus')\">위치 공유 상태 보기</div>\n                    <div class=\"menu\" @click=\"gotoMenu('/')\">그룹 초대 하기</div>\n                    <div class=\"menu\" @click=\"gotoMenu('/createSafezone')\">안심존 설정</div>\n                    <div class=\"menu\" @click=\"gotoMenu('/inactiveSensing')\">비활동 감지 기능 설정</div>\n                    <div class=\"menu\" @click=\"gotoMenu('/batteryAlert')\">배터리 부족 알림 설정</div>\n                    <div class=\"menu\" @click=\"gotoMenu('/sosSetting')\">SOS 설정</div>\n                    <div class=\"menu\" @click=\"leaveGroup\">그룹 나가기</div>\n                </div>\n            </div>\n        </div>\n        \n        <!-- moadl -->\n        <a-modal modal v-model:open=\"ModalShow\" title=\"\" class=\"wellau-modal\">\n            <p class=\"modal-content\">\n                {{msg[type]}}\n            </p>\n            <template #footer>\n                <div class=\"btn-set horizontal\">\n                    <a-button class=\"width100per\" @click=\"modalClose\">{{type === 0 ? '취소' : '확인'}}</a-button>\n                    <a-button class=\"width100per\" @click=\"leaveCheckGroup\" v-if=\"type === 0\">나가기</a-button>\n                </div>\n            </template>\n        </a-modal>\n    </div>\n</template>\n<script setup>\n    import { ref } from 'vue'\n    import { useRouter } from 'vue-router'\n\n    const msg = ref([\"정말로 [그룹1] 을 나가시겠습니까?\",\"[그룹1] 에서 나가셨습니다.\"])\n    const type = ref(0);\n    const router = useRouter();\n    const gotoMenu = (path)=>{\n        router.push(path);\n    }\n    const leaveGroup = ()=>{\n        type.value = 0;\n        ModalShow.value = true;\n    }\n    const ModalShow = ref(false);\n    const modalClose = ()=>{\n        ModalShow.value = false;\n        setTimeout(()=>{\n            if(type.value === 1) type.value = 0;\n        },500)\n    }\n    const leaveCheckGroup = ()=>{\n        ModalShow.value = false;\n        setTimeout(()=>{\n            type.value = 1;\n            ModalShow.value = true;\n            \n        },500)\n    }\n</script>\n<style type=\"scss\" scoped>\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;AA+BI,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,SAAS,QAAQ,YAAW;;;;IAErC,MAAMC,GAAG,GAAGF,GAAG,CAAC,CAAC,sBAAsB,EAAC,kBAAkB,CAAC;IAC3D,MAAMG,IAAI,GAAGH,GAAG,CAAC,CAAC,CAAC;IACnB,MAAMI,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,QAAQ,GAAIC,IAAI,IAAG;MACrBF,MAAM,CAACG,IAAI,CAACD,IAAI,CAAC;IACrB;IACA,MAAME,UAAU,GAAGA,CAAA,KAAI;MACnBL,IAAI,CAACM,KAAK,GAAG,CAAC;MACdC,SAAS,CAACD,KAAK,GAAG,IAAI;IAC1B;IACA,MAAMC,SAAS,GAAGV,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMW,UAAU,GAAGA,CAAA,KAAI;MACnBD,SAAS,CAACD,KAAK,GAAG,KAAK;MACvBG,UAAU,CAAC,MAAI;QACX,IAAGT,IAAI,CAACM,KAAK,KAAK,CAAC,EAAEN,IAAI,CAACM,KAAK,GAAG,CAAC;MACvC,CAAC,EAAC,GAAG;IACT;IACA,MAAMI,eAAe,GAAGA,CAAA,KAAI;MACxBH,SAAS,CAACD,KAAK,GAAG,KAAK;MACvBG,UAAU,CAAC,MAAI;QACXT,IAAI,CAACM,KAAK,GAAG,CAAC;QACdC,SAAS,CAACD,KAAK,GAAG,IAAI;MAE1B,CAAC,EAAC,GAAG;IACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}