{"ast":null,"code":"import { ref, watch, computed } from 'vue';\nimport { ShareAltOutlined, FormOutlined, MonitorOutlined, AlertOutlined } from '@ant-design/icons-vue';\nexport default {\n  __name: 'IconButtonBox',\n  props: {\n    icon: {\n      type: String,\n      default: () => {\n        return 'sharing'; // [record,search,sharing,alert]\n      }\n    },\n    text: {\n      type: String,\n      default: () => {\n        return null;\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    battery: {\n      type: Number,\n      default: () => {\n        return 0;\n      }\n    }\n  },\n  emits: ['click'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const textGroup = [{\n      text: \"위치공유\",\n      icon: \"sharing\"\n    }, {\n      text: \"위치기록\",\n      icon: \"record\"\n    }, {\n      text: \"길찾기\",\n      icon: \"search\"\n    }, {\n      text: \"알림목록\",\n      icon: \"alert\"\n    }, {\n      text: \"베터리\",\n      icon: \"battery\"\n    }, {\n      text: \"전화걸기\",\n      icon: \"tell\"\n    }, {\n      text: \"문자하기\",\n      icon: \"text\"\n    }];\n    const buttonText = ref(\"\");\n    const click = () => {\n      emit(\"click\", props.icon);\n    };\n    const barStyle = computed(() => {\n      const style = {};\n      console.log(\"props.battery : \", props.battery);\n      if (props.battery > -1) {\n        const per = props.battery * 0.01;\n        const width = `calc((100% - 11rem) * ${per})`;\n        style.width = width;\n        if (props.battery < 21) {\n          style.borderRadius = \"5rem 0 0 5rem\";\n        }\n      }\n      return style;\n    });\n    watch(() => props.icon, () => {\n      if (!props.text) {\n        const t = textGroup.find(a => a.icon === props.icon);\n        buttonText.value = t && t.text ? t.text : null;\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      emit,\n      textGroup,\n      buttonText,\n      click,\n      barStyle,\n      ref,\n      watch,\n      computed,\n      get ShareAltOutlined() {\n        return ShareAltOutlined;\n      },\n      get FormOutlined() {\n        return FormOutlined;\n      },\n      get MonitorOutlined() {\n        return MonitorOutlined;\n      },\n      get AlertOutlined() {\n        return AlertOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","computed","ShareAltOutlined","FormOutlined","MonitorOutlined","AlertOutlined","props","__props","emit","__emit","textGroup","text","icon","buttonText","click","barStyle","style","console","log","battery","per","width","borderRadius","t","find","a","value","immediate"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/components/Global/IconButtonBox.vue"],"sourcesContent":["<template>\n    <button class=\"icon-button-box i-location\" :disabled=\"props.disabled\" @click.stop=\"click\">\n        <i>\n            <div v-if=\"props.icon === 'tell'\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"33\" viewBox=\"0 0 33 33\" fill=\"none\">\n                <path d=\"M12.332 15.9531C13.3611 18.0781 15.0794 19.792 17.207 20.8156C17.364 20.8899 17.5376 20.922 17.7107 20.9089C17.8839 20.8957 18.0506 20.8377 18.1945 20.7406L21.3195 18.6531C21.4576 18.5594 21.6171 18.5023 21.7833 18.487C21.9494 18.4717 22.1167 18.4987 22.2695 18.5656L28.1195 21.0781C28.3195 21.1613 28.4865 21.3079 28.5949 21.4954C28.7033 21.6829 28.7471 21.9008 28.7195 22.1156C28.5341 23.5627 27.8277 24.8928 26.7326 25.8568C25.6374 26.8208 24.2285 27.3527 22.7695 27.3531C18.2609 27.3531 13.9368 25.562 10.7487 22.3739C7.5606 19.1858 5.76953 14.8617 5.76953 10.3531C5.76986 8.89406 6.3018 7.48517 7.26581 6.39001C8.22983 5.29486 9.55986 4.58848 11.007 4.40307C11.2218 4.37548 11.4397 4.41926 11.6272 4.52768C11.8147 4.63609 11.9613 4.80313 12.0445 5.00307L14.557 10.8656C14.6224 11.016 14.6497 11.1802 14.6366 11.3437C14.6235 11.5072 14.5705 11.6649 14.482 11.8031L12.3945 14.9781C12.3016 15.1217 12.247 15.2867 12.2361 15.4574C12.2252 15.6281 12.2582 15.7988 12.332 15.9531V15.9531Z\" stroke=\"#333333\" stroke-width=\"1.6\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </div>\n            <ShareAltOutlined v-if=\"props.icon === 'sharing'\" /><!-- 공유 -->\n            <FormOutlined v-if=\"props.icon === 'record'\" /><!-- 기록 -->\n            <MonitorOutlined v-if=\"props.icon === 'search'\" /><!-- 찾기 -->\n            <AlertOutlined v-if=\"props.icon === 'alert'\" /><!-- 알림 -->\n            <div class=\"battery-icon\" v-if=\"props.icon === 'battery'\">\n                <span class=\"bar\" :style=\"barStyle\"></span>\n                <svg  viewBox=\"0 0 416 168\"><path class=\"cls-1\" stroke-width=\"20rem\" stroke=\"currentColor\" fill=\"none\" d=\"M464.44,256.25h26.78C506,256.25,518,269,518,284.6v18.3c0,15.59-11.09,28.35-24.65,28.35H468.69\" transform=\"translate(-112 -209.75)\"/><rect stroke-width=\"20rem\" stroke=\"#1d1d1b\" fill=\"none\" class=\"cls-1\" x=\"10\" y=\"10\" width=\"345\" height=\"148\" rx=\"56.69\"/></svg>\n            </div>\n        </i>\n        <!-- \n        tell text map record\n        -->\n        \n        <span>{{(props.icon === 'battery') ? props.battery + '%' : buttonText }}</span>\n    </button>\n</template>\n<script setup>\n    import { ref,watch,computed,defineEmits,defineProps } from 'vue'\n    import { ShareAltOutlined,FormOutlined,MonitorOutlined,AlertOutlined } from '@ant-design/icons-vue'\n    const props = defineProps({\n        icon : {\n            type : String,\n            default : ()=>{\n                return 'sharing' // [record,search,sharing,alert]\n            }\n        },\n        text : {\n            type : String,\n            default : ()=>{\n                return null\n            }\n        },\n        disabled : {\n            type : Boolean,\n            default : ()=>{\n                return false;\n            }\n        },\n        battery : {\n            type : Number,\n            default : ()=>{\n                return 0;\n            }\n        }\n    })\n    const emit = defineEmits(['click']);\n    const textGroup = [{text:\"위치공유\",icon:\"sharing\"},{text:\"위치기록\",icon:\"record\"},{text:\"길찾기\",icon:\"search\"},{text:\"알림목록\",icon:\"alert\"},{text:\"베터리\",icon:\"battery\"},{text:\"전화걸기\",icon:\"tell\"},{text:\"문자하기\",icon:\"text\"}]\n    const buttonText = ref(\"\");\n    const click = ()=>{\n        emit(\"click\",props.icon);\n    }\n    const barStyle = computed(()=>{\n        const style = {};\n        console.log(\"props.battery : \",props.battery)\n        if(props.battery > -1){\n            const per = props.battery * 0.01;\n            const width = `calc((100% - 11rem) * ${per})`\n            style.width = width;\n            if(props.battery < 21){\n                style.borderRadius = \"5rem 0 0 5rem\"\n            }\n        }\n        return style;\n    })\n    watch(()=>props.icon,()=>{\n        if(!props.text){\n            const t = textGroup.find(a=>a.icon === props.icon);\n            buttonText.value = (t && t.text) ? t.text : null;\n        }\n    },{immediate:true})\n</script>\n<style type=\"scss\" scoped>\n    .icon-button-box{\n        display:inline-flex;\n        flex-direction:column;\n        align-items:center;\n        width:150rem;\n        padding:10rem;\n        border-radius:18rem;\n        outline:none;\n        border:none;\n        cursor:pointer;\n        background:#F3F6FB;\n        &> i{\n            font-size:40rem;\n        }\n        &> span{\n            font-size: 13rem;\n            font-style: normal;\n            font-weight: 700;\n            line-height: normal;\n            letter-spacing: 0.13rem;\n            color:#323232;\n        }\n        &[disabled]{\n            cursor:default;\n            &> i, &> span{\n                color:#ddd;\n            }\n        }\n    }\n    .battery-icon{\n        position:relative;\n        display:flex;\n        align-items:center;\n        width:40rem;\n        height:40rem;\n        margin:0 0 0 5rem;\n        &> .bar{\n            position:absolute;\n            left:3rem;\n            top:50%;\n            z-index:2;\n            width:calc((100% - 11rem) * 1);\n            height:11rem;\n            border-radius:5rem;\n            transform:translate(0,-50%);\n            background:black;\n        }\n        &> svg{\n            position:relative;\n            top:0;\n            z-index:5;\n            height:auto;\n        }\n    }\n</style>"],"mappings":"AAyBI,SAASA,GAAG,EAACC,KAAK,EAACC,QAAgC,QAAQ,KAAI;AAC/D,SAASC,gBAAgB,EAACC,YAAY,EAACC,eAAe,EAACC,aAAa,QAAQ,uBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAClG,MAAMC,KAAK,GAAGC,OAAA;IA0Bd,MAAMC,IAAI,GAAGC,MAAsB;IACnC,MAAMC,SAAS,GAAG,CAAC;MAACC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAS,CAAC,EAAC;MAACD,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAQ,CAAC,EAAC;MAACD,IAAI,EAAC,KAAK;MAACC,IAAI,EAAC;IAAQ,CAAC,EAAC;MAACD,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAO,CAAC,EAAC;MAACD,IAAI,EAAC,KAAK;MAACC,IAAI,EAAC;IAAS,CAAC,EAAC;MAACD,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAM,CAAC,EAAC;MAACD,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAM,CAAC;IACjN,MAAMC,UAAU,GAAGd,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMe,KAAK,GAAGA,CAAA,KAAI;MACdN,IAAI,CAAC,OAAO,EAACF,KAAK,CAACM,IAAI,CAAC;IAC5B;IACA,MAAMG,QAAQ,GAAGd,QAAQ,CAAC,MAAI;MAC1B,MAAMe,KAAK,GAAG,CAAC,CAAC;MAChBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACZ,KAAK,CAACa,OAAO;MAC5C,IAAGb,KAAK,CAACa,OAAO,GAAG,CAAC,CAAC,EAAC;QAClB,MAAMC,GAAG,GAAGd,KAAK,CAACa,OAAO,GAAG,IAAI;QAChC,MAAME,KAAK,GAAG,yBAAyBD,GAAG,GAAE;QAC5CJ,KAAK,CAACK,KAAK,GAAGA,KAAK;QACnB,IAAGf,KAAK,CAACa,OAAO,GAAG,EAAE,EAAC;UAClBH,KAAK,CAACM,YAAY,GAAG,eAAc;QACvC;MACJ;MACA,OAAON,KAAK;IAChB,CAAC;IACDhB,KAAK,CAAC,MAAIM,KAAK,CAACM,IAAI,EAAC,MAAI;MACrB,IAAG,CAACN,KAAK,CAACK,IAAI,EAAC;QACX,MAAMY,CAAC,GAAGb,SAAS,CAACc,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACb,IAAI,KAAKN,KAAK,CAACM,IAAI,CAAC;QAClDC,UAAU,CAACa,KAAK,GAAIH,CAAC,IAAIA,CAAC,CAACZ,IAAI,GAAIY,CAAC,CAACZ,IAAI,GAAG,IAAI;MACpD;IACJ,CAAC,EAAC;MAACgB,SAAS,EAAC;IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}