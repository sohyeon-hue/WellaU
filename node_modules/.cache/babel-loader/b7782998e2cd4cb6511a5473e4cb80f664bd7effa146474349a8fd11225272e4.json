{"ast":null,"code":"import { ref, computed } from 'vue';\nimport testComponent from './testComponent';\nexport default {\n  __name: 'testVue',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const textField = ref(\"텍스트 필드 입니다.\");\n    const childValue = ref(\"부모에서 값 전달\");\n    const childInputEv = $ev => {\n      childValue.value = $ev.target.value;\n    };\n    const inputEv = $ev => {\n      textField.value = $ev.target.value;\n    };\n    const inputStyle = computed(() => {\n      const style = {\n        color: 'red'\n      };\n      return style;\n    });\n    const __returned__ = {\n      textField,\n      childValue,\n      childInputEv,\n      inputEv,\n      inputStyle,\n      ref,\n      computed,\n      get testComponent() {\n        return testComponent;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","testComponent","textField","childValue","childInputEv","$ev","value","target","inputEv","inputStyle","style","color"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pages/testVue.vue"],"sourcesContent":["<template>\n    <div>textfield : {{textField}}    </div>\n    <input v-model=\"textField\" @input='inputEv' :style=\"inputStyle\" />\n    <div>\n        <div>childValue : {{childValue}}</div>\n        <testComponent v-model:value=\"childValue\" @input=\"childInputEv\" />\n    </div>\n</template>\n<script setup>\n    import { ref, computed } from 'vue'\n    import testComponent from './testComponent'\n    const textField = ref(\"텍스트 필드 입니다.\");\n    const childValue = ref(\"부모에서 값 전달\");\n    const childInputEv = ($ev)=>{\n         childValue.value = $ev.target.value\n    }\n    const inputEv = ($ev)=>{\n      textField.value = $ev.target.value  \n    }\n    const inputStyle = computed(()=>{\n        const style = {color : 'red'};\n        return style\n    })\n</script>\n<!--\n<script>\n    import { ref,onMounted,computed, watch } from 'vue'\n    import { useStore } from 'vuex'\n    import testComponent from './testComponent'\n    export default {\n        name : \"testVue\",\n        props : {\n            id : {\n                type : String,\n                default : ()=>{\n                    return \"exid\";\n                }\n            }\n        },\n        components : {\n            testComponent\n        },\n        setup(){\n\n            const cildValue = ref(\"부모에서 값 전달\")\n\n\n            const textField = ref(\"아아아아아아아아\");\n            const inputEv = ($ev)=>{\n                textField.value = $ev.target.value\n            }\n            const inputStyle = computed(()=>{\n                const style = {};\n                style.color = \"red\";\n                console.log(\"style : \",style)\n                return style;\n            })\n            const stroe = useStore();\n            console.log(\"useStore : \",stroe)\n            console.log(\"useStore.state.pageStatus : \",stroe.state.pageStatus)\n\n            onMounted(()=>{\n\n            })\n            watch(textField,(n)=>{\n                console.log(\"watch n : \",n)\n            })\n\n            const childInputEv = (val)=>{\n                console.log(\"val : \",val);\n                cildValue.value = val;\n            }\n            return {\n                textField,\n                inputEv,\n                inputStyle,\n                cildValue,\n                childInputEv\n            }\n        },\n    }\n</script>\n-->"],"mappings":"AASI,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,OAAOC,aAAa,MAAM,iBAAgB;;;;;;;IAC1C,MAAMC,SAAS,GAAGH,GAAG,CAAC,aAAa,CAAC;IACpC,MAAMI,UAAU,GAAGJ,GAAG,CAAC,WAAW,CAAC;IACnC,MAAMK,YAAY,GAAIC,GAAG,IAAG;MACvBF,UAAU,CAACG,KAAK,GAAGD,GAAG,CAACE,MAAM,CAACD,KAAI;IACvC;IACA,MAAME,OAAO,GAAIH,GAAG,IAAG;MACrBH,SAAS,CAACI,KAAK,GAAGD,GAAG,CAACE,MAAM,CAACD,KAAK;IACpC;IACA,MAAMG,UAAU,GAAGT,QAAQ,CAAC,MAAI;MAC5B,MAAMU,KAAK,GAAG;QAACC,KAAK,EAAG;MAAK,CAAC;MAC7B,OAAOD,KAAI;IACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}