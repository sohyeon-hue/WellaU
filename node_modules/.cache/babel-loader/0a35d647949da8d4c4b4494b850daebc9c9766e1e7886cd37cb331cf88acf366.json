{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'groupManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const msg = ref([\"정말로 [그룹1] 을 나가시겠습니까?\", \"[그룹1] 에서 나가셨습니다.\"]);\n    const popMsg = ref(\"\");\n    const type = ref(0);\n    const router = useRouter();\n    const gotoMenu = path => {\n      router.push(path);\n    };\n    const leaveGroup = () => {\n      popMsg.value = msg.value[0];\n      ModalShow.value = true;\n    };\n    const ModalShow = ref(false);\n    const modalClose = () => {\n      ModalShow.value = false;\n    };\n    const leaveCheckGroup = () => {\n      ModalShow.value = false;\n      setTimeout(() => {\n        ModalShow.value = true;\n        popMsg.value = msg.value[1];\n      }, 1000);\n    };\n    const __returned__ = {\n      msg,\n      popMsg,\n      type,\n      router,\n      gotoMenu,\n      leaveGroup,\n      ModalShow,\n      modalClose,\n      leaveCheckGroup,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","msg","popMsg","type","router","gotoMenu","path","push","leaveGroup","value","ModalShow","modalClose","leaveCheckGroup","setTimeout"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pages/groupManagement.vue"],"sourcesContent":["<template>\n    <div class=\"content-wrapper onePage\">\n        <div class=\"content-scroll\">\n            <div class=\"group-management-menu\">\n                <div class=\"menu\" @click=\"gotoMenu('/locationSharingStatus')\">위치 공유 상태 보기</div>\n                <div class=\"menu\" @click=\"gotoMenu('/')\">그룹 초대 하기</div>\n                <div class=\"menu\" @click=\"gotoMenu('/')\">안심존 설정</div>\n                <div class=\"menu\" @click=\"gotoMenu('/inactiveSensing')\">비활동 감지 기능 설정</div>\n                <div class=\"menu\" @click=\"gotoMenu('/batteryAlert')\">배터리 부족 알림 설정</div>\n                <div class=\"menu\" @click=\"gotoMenu('/sosSetting')\">SOS 설정</div>\n                <div class=\"menu\" @click=\"leaveGroup\">그룹 나가기</div>\n            </div>\n        </div>\n        \n        <!-- moadl -->\n        <a-modal modal v-model:open=\"ModalShow\" title=\"\">\n            <p class=\"modal-content\">\n                {{msg[type]}}\n            </p>\n            <template #footer>\n                <div class=\"btn-set horizontal\">\n                    <a-button class=\"width100per\" @click=\"modalClose\">{{type === 0 ? '취소' : '확인'}}</a-button>\n                    <a-button class=\"width100per\" @click=\"leaveCheckGroup\" v-if=\"type === 0\">나가기</a-button>\n                </div>\n            </template>\n        </a-modal>\n    </div>\n</template>\n<script setup>\n    import { ref } from 'vue'\n    import { useRouter } from 'vue-router'\n\n    const msg = ref([\"정말로 [그룹1] 을 나가시겠습니까?\",\"[그룹1] 에서 나가셨습니다.\"])\n    const popMsg = ref(\"\");\n    const type = ref(0);\n    const router = useRouter();\n    const gotoMenu = (path)=>{\n        router.push(path);\n    }\n    const leaveGroup = ()=>{\n        popMsg.value = msg.value[0]\n        ModalShow.value = true;\n    }\n    const ModalShow = ref(false);\n    const modalClose = ()=>{\n        ModalShow.value = false;\n    }\n    const leaveCheckGroup = ()=>{\n        ModalShow.value = false;\n        setTimeout(()=>{\n            ModalShow.value = true;\n            popMsg.value = msg.value[1]\n        },1000)\n    }\n</script>\n<style type=\"scss\" scoped>\n    .group-management-menu{\n        padding:20rem;\n        &> .menu{\n            display:flex;\n            align-items:center;\n            height:40rem;\n            font-size:18rem;\n            line-height:1;\n            font-weight:bold;\n        }\n    }\n</style>"],"mappings":";AA6BI,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,SAAS,QAAQ,YAAW;;;;;;;IAErC,MAAMC,GAAG,GAAGF,GAAG,CAAC,CAAC,sBAAsB,EAAC,kBAAkB,CAAC;IAC3D,MAAMG,MAAM,GAAGH,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMI,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC;IACnB,MAAMK,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,QAAQ,GAAIC,IAAI,IAAG;MACrBF,MAAM,CAACG,IAAI,CAACD,IAAI,CAAC;IACrB;IACA,MAAME,UAAU,GAAGA,CAAA,KAAI;MACnBN,MAAM,CAACO,KAAK,GAAGR,GAAG,CAACQ,KAAK,CAAC,CAAC;MAC1BC,SAAS,CAACD,KAAK,GAAG,IAAI;IAC1B;IACA,MAAMC,SAAS,GAAGX,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMY,UAAU,GAAGA,CAAA,KAAI;MACnBD,SAAS,CAACD,KAAK,GAAG,KAAK;IAC3B;IACA,MAAMG,eAAe,GAAGA,CAAA,KAAI;MACxBF,SAAS,CAACD,KAAK,GAAG,KAAK;MACvBI,UAAU,CAAC,MAAI;QACXH,SAAS,CAACD,KAAK,GAAG,IAAI;QACtBP,MAAM,CAACO,KAAK,GAAGR,GAAG,CAACQ,KAAK,CAAC,CAAC;MAC9B,CAAC,EAAC,IAAI;IACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}