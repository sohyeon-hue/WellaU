{"ast":null,"code":"import { useModel as _useModel, mergeModels as _mergeModels } from 'vue';\nimport { renderSlot as _renderSlot, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal-content-box\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"btn-set horizontal\"\n};\nimport { computed } from 'vue';\nexport default {\n  __name: 'ModalBox',\n  props: /*@__PURE__*/_mergeModels({\n    modalShow: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    size: {\n      type: String,\n      default: () => {\n        return \"70%\";\n      }\n    },\n    minSize: {\n      type: String,\n      default: () => {\n        return \"\";\n      }\n    },\n    maxSize: {\n      type: String,\n      default: () => {\n        return \"300rem\";\n      }\n    },\n    bth: {\n      stype: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    padding: {\n      type: [String, Number],\n      default: () => {\n        return \"\";\n      }\n    }\n  }, {\n    \"modalShow\": {},\n    \"modalShowModifiers\": {}\n  }),\n  emits: [\"update:modalShow\"],\n  setup(__props) {\n    const props = __props;\n    const model = _useModel(__props, \"modalShow\");\n    // model.value = false;\n    const modalClose = () => {\n      model.value = false;\n    };\n    const modalScrollBoxStyle = computed(() => {\n      const style = {};\n      style.width = props.size;\n      if (props.minSize !== \"\") {\n        style.minWidth = props.minSize;\n      }\n      if (props.maxSize !== \"\") {\n        style.maxWidth = props.maxSize;\n      }\n      if (props.padding !== \"\") {\n        style.padding = props.padding;\n      }\n      return style;\n    });\n    return (_ctx, _cache) => {\n      const _component_a_button = _resolveComponent(\"a-button\");\n      return props.modalShow ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"modal-deem-wrapper\",\n        onClick: modalClose\n      }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n        class: \"modal-scroll-box\",\n        style: _normalizeStyle(modalScrollBoxStyle.value),\n        onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n      }, [_createElementVNode(\"div\", _hoisted_2, [_renderSlot(_ctx.$slots, \"default\")]), __props.bth ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_a_button, {\n        onClick: modalClose\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"닫기\")])),\n        _: 1\n      })])) : _createCommentVNode(\"\", true)], 4)])])) : _createCommentVNode(\"\", true);\n    };\n  }\n};","map":{"version":3,"names":["computed","props","__props","model","_useModel","modalClose","value","modalScrollBoxStyle","style","width","size","minSize","minWidth","maxSize","maxWidth","padding"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/components/Global/ModalBox.vue"],"sourcesContent":["<template>\n    <div class=\"modal-deem-wrapper\" v-if=\"props.modalShow\" @click=\"modalClose\">\n        <div class=\"modal-content-box\">\n            <div class=\"modal-scroll-box\" :style=\"modalScrollBoxStyle\" @click.stop>\n                <div class=\"modal-content\">\n                    <slot />\n                </div>\n                <div class=\"btn-set horizontal\" v-if=\"bth\">\n                    <a-button @click=\"modalClose\">닫기</a-button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\n    import { defineProps,defineModel,computed } from 'vue'\n    const props = defineProps({\n        modalShow : {\n            type : Boolean,\n            default : ()=>{\n                return false;\n            }\n        },\n        size : {\n            type : String,\n            default : ()=>{\n                return \"70%\"\n            }\n        },\n        minSize : {\n            type : String,\n            default : ()=>{\n                return \"\"\n            }\n        },\n        maxSize : {\n            type : String,\n            default : ()=>{\n                return \"300rem\"\n            }\n        },\n        bth : {\n            stype : Boolean,\n            default : ()=>{\n                return false;\n            }\n        },\n        padding : {\n            type : [String,Number],\n            default : ()=>{\n                return \"\";\n            }\n        }\n    })\n    const model = defineModel(\"modalShow\");\n        // model.value = false;\n    const modalClose = ()=>{\n        model.value = false;\n    }\n    const modalScrollBoxStyle = computed(()=>{\n        const style = {};\n        style.width = props.size;\n        if(props.minSize !== \"\"){\n            style.minWidth = props.minSize\n        }\n        if(props.maxSize !== \"\"){\n            style.maxWidth = props.maxSize\n        }\n        if(props.padding !== \"\"){\n            style.padding = props.padding\n        }\n        return style\n    })\n</script>\n<style type=\"scss\" scoped>\n    .modal-deem-wrapper{\n        position:fixed;\n        top:0;\n        right:0;\n        left:0;\n        bottom:0;\n        z-index:10000;\n        display:flex;\n        background:rgba(0,0,0,0.45);\n        &> .modal-content-box{\n            flex:1;\n            display:flex;\n            align-items:center;\n            justify-content:center;\n            height:100%;\n        }\n    }\n    .modal-scroll-box{\n        display:felx;\n        flex-direction:column;\n        justify-content:center;\n        padding:20rem;\n        border-radius:8rem;\n        background:#fff;\n        &> .modal-content{\n            flex:1;\n            padding:0;\n        }\n    }\n</style>"],"mappings":";;;;;;;;;;;;AAeI,SAAiCA,QAAQ,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACrD,MAAMC,KAAK,GAAGC,OAAA;IAsCd,MAAMC,KAAK,GAAGC,SAAW,CAAAF,OAAA,EAAC,WAAW,CAAC;IAClC;IACJ,MAAMG,UAAU,GAAGA,CAAA,KAAI;MACnBF,KAAK,CAACG,KAAK,GAAG,KAAK;IACvB;IACA,MAAMC,mBAAmB,GAAGP,QAAQ,CAAC,MAAI;MACrC,MAAMQ,KAAK,GAAG,CAAC,CAAC;MAChBA,KAAK,CAACC,KAAK,GAAGR,KAAK,CAACS,IAAI;MACxB,IAAGT,KAAK,CAACU,OAAO,KAAK,EAAE,EAAC;QACpBH,KAAK,CAACI,QAAQ,GAAGX,KAAK,CAACU,OAAM;MACjC;MACA,IAAGV,KAAK,CAACY,OAAO,KAAK,EAAE,EAAC;QACpBL,KAAK,CAACM,QAAQ,GAAGb,KAAK,CAACY,OAAM;MACjC;MACA,IAAGZ,KAAK,CAACc,OAAO,KAAK,EAAE,EAAC;QACpBP,KAAK,CAACO,OAAO,GAAGd,KAAK,CAACc,OAAM;MAChC;MACA,OAAOP,KAAI;IACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}