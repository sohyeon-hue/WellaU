{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"inline-flex\",\n    \"flex-direction\": \"column\"\n  }\n};\nimport { ref, computed } from 'vue';\nimport testComponent from './testComponent';\nexport default {\n  __name: 'testVue',\n  setup(__props) {\n    const textField = ref(\"텍스트 필드 입니다.\");\n    const childValue = ref(\"부모에서 값 전달\");\n    const childInputEv = val => {\n      childValue.value = val;\n    };\n    const inputEv = $ev => {\n      textField.value = $ev.target.value;\n    };\n    const inputStyle = computed(() => {\n      const style = {\n        color: 'red'\n      };\n      return style;\n    });\n    const popShow = ref(true);\n    const popEv = () => {\n      popShow.value = true;\n    };\n    return (_ctx, _cache) => {\n      const _component_MapPin = _resolveComponent(\"MapPin\");\n      const _component_a_button = _resolveComponent(\"a-button\");\n      return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, \"textfield : \" + _toDisplayString(textField.value), 1), _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => textField.value = $event),\n        onInput: inputEv,\n        style: _normalizeStyle(inputStyle.value)\n      }, null, 36), [[_vModelText, textField.value]]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, \"childValue : \" + _toDisplayString(childValue.value), 1), _createVNode(_unref(testComponent), {\n        value: childValue.value,\n        \"onUpdate:value\": _cache[1] || (_cache[1] = $event => childValue.value = $event),\n        onInput: childInputEv\n      }, null, 8, [\"value\"])]), _createVNode(_component_MapPin, {\n        icon: \"yellow\"\n      }), _createVNode(_component_MapPin, {\n        icon: \"people\"\n      }), _createVNode(_component_MapPin, {\n        icon: \"house\"\n      }), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_MapPin, {\n        type: \"pie\",\n        popShow: popShow.value,\n        \"onUpdate:popShow\": _cache[2] || (_cache[2] = $event => popShow.value = $event),\n        per: 5,\n        icon: \"people\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"a\", {\n          href: \"tel:01099999999\"\n        }, \"010-0000-0000\", -1), _createTextVNode(\"번호로 연락 주세요 \")])),\n        _: 1\n      }, 8, [\"popShow\"]), _createVNode(_component_a_button, {\n        onClick: popEv\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"팝업\")])),\n        _: 1\n      })]), _createVNode(_component_MapPin, {\n        type: \"pie\",\n        per: 30,\n        icon: \"people\"\n      }), _createVNode(_component_MapPin, {\n        type: \"pie\",\n        per: 40,\n        icon: \"house\"\n      }), _createVNode(_component_MapPin, {\n        type: \"pie\",\n        per: 70,\n        icon: \"house\"\n      }), _createVNode(_component_MapPin, {\n        type: \"pie\",\n        per: 90,\n        icon: \"none\"\n      }), _createVNode(_component_MapPin, {\n        type: \"pie\",\n        per: 100,\n        icon: \"house\"\n      })], 64);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","testComponent","textField","childValue","childInputEv","val","value","inputEv","$ev","target","inputStyle","style","color","popShow","popEv"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pages/testVue.vue"],"sourcesContent":["<template>\n    <div>textfield : {{textField}}    </div>\n    <input v-model=\"textField\" @input='inputEv' :style=\"inputStyle\" />\n    <div>\n        <div>childValue : {{childValue}}</div>\n        <testComponent v-model:value=\"childValue\" @input=\"childInputEv\" />\n    </div>\n    <MapPin icon=\"yellow\" />\n    <MapPin icon=\"people\" />\n    <MapPin icon=\"house\" />\n    <div style=\"display:inline-flex; flex-direction:column\">\n        <MapPin type=\"pie\" v-model:popShow=\"popShow\" :per=\"5\" icon=\"people\">\n            <a href=\"tel:01099999999\">010-0000-0000</a>번호로 연락 주세요\n        </MapPin>\n        <a-button @click=\"popEv\">팝업</a-button>\n    </div>\n    <MapPin type=\"pie\" :per=\"30\" icon=\"people\" />\n    <MapPin type=\"pie\" :per=\"40\" icon=\"house\" />\n    <MapPin type=\"pie\" :per=\"70\" icon=\"house\" />\n    <MapPin type=\"pie\" :per=\"90\" icon=\"none\" />\n    <MapPin type=\"pie\" :per=\"100\" icon=\"house\" />\n</template>\n<script setup>\n    import { ref, computed } from 'vue'\n    import testComponent from './testComponent'\n    const textField = ref(\"텍스트 필드 입니다.\");\n    const childValue = ref(\"부모에서 값 전달\");\n    const childInputEv = (val)=>{\n         childValue.value = val;\n    }\n    const inputEv = ($ev)=>{\n      textField.value = $ev.target.value  \n    }\n    const inputStyle = computed(()=>{\n        const style = {color : 'red'};\n        return style\n    })\n    const popShow = ref(true);\n    const popEv = ()=>{\n        popShow.value = true;\n    }\n</script>\n<!--\n<script>\n    import { ref,onMounted,computed, watch } from 'vue'\n    import { useStore } from 'vuex'\n    import testComponent from './testComponent'\n    export default {\n        name : \"testVue\",\n        props : {\n            id : {\n                type : String,\n                default : ()=>{\n                    return \"exid\";\n                }\n            }\n        },\n        components : {\n            testComponent\n        },\n        setup(){\n\n            const cildValue = ref(\"부모에서 값 전달\")\n\n\n            const textField = ref(\"아아아아아아아아\");\n            const inputEv = ($ev)=>{\n                textField.value = $ev.target.value\n            }\n            const inputStyle = computed(()=>{\n                const style = {};\n                style.color = \"red\";\n                console.log(\"style : \",style)\n                return style;\n            })\n            const stroe = useStore();\n            console.log(\"useStore : \",stroe)\n            console.log(\"useStore.state.pageStatus : \",stroe.state.pageStatus)\n\n            onMounted(()=>{\n\n            })\n            watch(textField,(n)=>{\n                console.log(\"watch n : \",n)\n            })\n\n            const childInputEv = (val)=>{\n                console.log(\"val : \",val);\n                cildValue.value = val;\n            }\n            return {\n                textField,\n                inputEv,\n                inputStyle,\n                cildValue,\n                childInputEv\n            }\n        },\n    }\n</script>\n-->\n<style type=\"scss\" scoped>\n</style>"],"mappings":";;;;;;;AAuBI,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,OAAOC,aAAa,MAAM,iBAAgB;;;;IAC1C,MAAMC,SAAS,GAAGH,GAAG,CAAC,aAAa,CAAC;IACpC,MAAMI,UAAU,GAAGJ,GAAG,CAAC,WAAW,CAAC;IACnC,MAAMK,YAAY,GAAIC,GAAG,IAAG;MACvBF,UAAU,CAACG,KAAK,GAAGD,GAAG;IAC3B;IACA,MAAME,OAAO,GAAIC,GAAG,IAAG;MACrBN,SAAS,CAACI,KAAK,GAAGE,GAAG,CAACC,MAAM,CAACH,KAAK;IACpC;IACA,MAAMI,UAAU,GAAGV,QAAQ,CAAC,MAAI;MAC5B,MAAMW,KAAK,GAAG;QAACC,KAAK,EAAG;MAAK,CAAC;MAC7B,OAAOD,KAAI;IACf,CAAC;IACD,MAAME,OAAO,GAAGd,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMe,KAAK,GAAGA,CAAA,KAAI;MACdD,OAAO,CAACP,KAAK,GAAG,IAAI;IACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}