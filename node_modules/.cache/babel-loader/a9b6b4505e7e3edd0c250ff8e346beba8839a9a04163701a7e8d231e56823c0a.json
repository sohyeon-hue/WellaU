{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"listWrap\"\n};\nconst _hoisted_2 = {\n  class: \"top\"\n};\nconst _hoisted_3 = {\n  cellspacing: \"0\",\n  cellapdding: \"0\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, \"화면설계서 버전 : v1.15, 총 페이지 : \" + _toDisplayString($setup.pageList.length), 1 /* TEXT */), _createElementVNode(\"table\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"colgroup\", null, [_createElementVNode(\"col\", {\n    style: {\n      \"width\": \"20%\"\n    }\n  }), _createElementVNode(\"col\", {\n    style: {\n      \"width\": \"20%\"\n    }\n  }), _createElementVNode(\"col\", {\n    style: {\n      \"width\": \"20%\"\n    }\n  }), _createElementVNode(\"col\", {\n    style: {\n      \"width\": \"20%\"\n    }\n  }), _createElementVNode(\"col\", {\n    style: {\n      \"width\": \"20%\"\n    }\n  })], -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \" 카테고리 \"), _createElementVNode(\"th\", null, \" OS \"), _createElementVNode(\"th\", null, \" 이름 \"), _createElementVNode(\"th\", null, \" 피피티 번호 \"), _createElementVNode(\"th\", null, \" 완료 \")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pageList, (page, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: 'list' + index,\n      class: _normalizeClass($setup.categoryLine(index)),\n      onClick: $event => $setup.trClick(page.path)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(page.category), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(page.os), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(page.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(page.page), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(page.status ? page.status : \"-\"), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","cellspacing","cellapdding","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","pageList","length","_hoisted_3","style","_Fragment","_renderList","page","index","key","_normalizeClass","categoryLine","onClick","$event","trClick","path","category","os","name","status","_hoisted_4"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pageListView.vue"],"sourcesContent":["<template>\n    <div class=\"listWrap\">\n        <div class=\"top\">화면설계서 버전 : v1.15, 총 페이지 : {{pageList.length}}</div>\n        <table cellspacing=\"0\" cellapdding=\"0\">\n            <colgroup>\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n            </colgroup>\n            <thead>\n                <tr>\n                    <th>\n                        카테고리\n                    </th>\n                    <th>\n                        OS\n                    </th>\n                    <th>\n                        이름\n                    </th>\n                    <th>\n                        피피티 번호\n                    </th>\n                    <th>\n                        완료\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(page,index) in pageList\" :key=\"'list' + index\" :class=\"categoryLine(index)\" @click=\"trClick(page.path)\">\n                    <td>\n                        {{page.category}}\n                    </td>\n                    <td>\n                        {{page.os}}\n                    </td>\n                    <td>\n                        {{page.name}}\n                    </td>\n                    <td>\n                        {{page.page}}\n                    </td>\n                    <td>\n                        {{page.status ? page.status : \"-\"}}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n<script setup>\n    import { ref } from 'vue'\n    import { useRouter } from 'vue-router'\n    import pageListData from './pageList'\n\n    const pageList = ref(pageListData)\n    const categoryLine = (index)=>{\n        let temp = \"\";\n        const index2 = index - 1;\n        if(index > 0 && pageList.value[index2].category !== pageList.value[index].category){\n            temp = \"categoryLine\"\n        }\n        return temp;\n    }\n    const router = useRouter();\n    const trClick = (path)=>{\n        router.push(path);\n    }\n</script>\n<style type=\"scss\" scoped>\n    .listWrap{\n        padding:0 0 10rem 0;\n        background:rgba(0,0,0,0.7);\n    }\n    table{\n        width:calc(100% - 20rem);\n        margin:0 auto;\n        font-size:12rem;\n        border-collapse:collapse;\n        td, th{\n            border:1px solid rgba(255,255,255,0.15);\n        }\n        thead{\n            th, td{\n                height:40rem;\n                font-weight:bold;\n                color:#ccc;\n                background:rgba(0,0,0,0.55);\n            }\n        }\n        tbody{\n            td{\n                padding:10rem;\n                font-size:15rem;\n                color:#fff;\n                background:rgba(0,0,0,0.35);\n                &:first-child{\n                    text-align:center;\n                }\n            }\n        }\n    }\n    .categoryLine{\n        border-top:2rem double rgba(255,255,255,0.5);\n    }\n    .top{\n        padding:10rem;\n        font-size:14rem;\n        text-align:right;\n        color:rgba(255,255,255,0.8);\n    }\n    .subTit{\n        padding:10rem;\n        font-size:14rem;\n        text-align:right;\n        color:rgba(255,255,255,0.8);\n    }\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAK;;EACTC,WAAW,EAAC,GAAG;EAACC,WAAW,EAAC;;mBAH3C;;uBACIC,mBAAA,CAiDM,OAjDNC,UAiDM,GAhDFC,mBAAA,CAAoE,OAApEC,UAAoE,EAAnD,4BAA0B,GAAAC,gBAAA,CAAEC,MAAA,CAAAC,QAAQ,CAACC,MAAM,kBAC5DL,mBAAA,CA8CQ,SA9CRM,UA8CQ,G,0BA7CJN,mBAAA,CAMW,mBALPA,mBAAA,CAAyB;IAApBO,KAAiB,EAAjB;MAAA;IAAA;EAAiB,IACtBP,mBAAA,CAAyB;IAApBO,KAAiB,EAAjB;MAAA;IAAA;EAAiB,IACtBP,mBAAA,CAAyB;IAApBO,KAAiB,EAAjB;MAAA;IAAA;EAAiB,IACtBP,mBAAA,CAAyB;IAApBO,KAAiB,EAAjB;MAAA;IAAA;EAAiB,IACtBP,mBAAA,CAAyB;IAApBO,KAAiB,EAAjB;MAAA;IAAA;EAAiB,G,gDAE1BP,mBAAA,CAkBQ,gBAjBJA,mBAAA,CAgBK,aAfDA,mBAAA,CAEK,YAFD,QAEJ,GACAA,mBAAA,CAEK,YAFD,MAEJ,GACAA,mBAAA,CAEK,YAFD,MAEJ,GACAA,mBAAA,CAEK,YAFD,UAEJ,GACAA,mBAAA,CAEK,YAFD,MAEJ,E,wBAGRA,mBAAA,CAkBQ,iB,kBAjBJF,mBAAA,CAgBKU,SAAA,QA/CrBC,WAAA,CA+B2CN,MAAA,CAAAC,QAAQ,EA/BnD,CA+B4BM,IAAI,EAACC,KAAK;yBAAtBb,mBAAA,CAgBK;MAhBiCc,GAAG,WAAWD,KAAK;MAAGhB,KAAK,EA/BjFkB,eAAA,CA+BmFV,MAAA,CAAAW,YAAY,CAACH,KAAK;MAAII,OAAK,EAAAC,MAAA,IAAEb,MAAA,CAAAc,OAAO,CAACP,IAAI,CAACQ,IAAI;QAC7GlB,mBAAA,CAEK,YAAAE,gBAAA,CADCQ,IAAI,CAACS,QAAQ,kBAEnBnB,mBAAA,CAEK,YAAAE,gBAAA,CADCQ,IAAI,CAACU,EAAE,kBAEbpB,mBAAA,CAEK,YAAAE,gBAAA,CADCQ,IAAI,CAACW,IAAI,kBAEfrB,mBAAA,CAEK,YAAAE,gBAAA,CADCQ,IAAI,CAACA,IAAI,kBAEfV,mBAAA,CAEK,YAAAE,gBAAA,CADCQ,IAAI,CAACY,MAAM,GAAGZ,IAAI,CAACY,MAAM,uB,yBA7CnDC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}