{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"bothBar\"\n};\nconst _hoisted_2 = {\n  class: \"bothBar-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"bothBar-wrapper\",\n    style: _normalizeStyle($setup.bothBarWrapperStyle),\n    onTouchstart: $setup.touchStart,\n    onTouchmove: $setup.touchMoved,\n    onTouchend: $setup.touchEnd\n  }, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"bothBar-thumn\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_renderSlot(_ctx.$slots, \"content\", {}, undefined, true)])], 36 /* STYLE, NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","style","_normalizeStyle","$setup","bothBarWrapperStyle","onTouchstart","touchStart","onTouchmove","touchMoved","onTouchend","touchEnd","_hoisted_2","_renderSlot","_ctx","$slots","undefined"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/components/Global/BothBar.vue"],"sourcesContent":["<template>\n    <div id=\"bothBar\">\n        <div class=\"bothBar-wrapper\" :style=\"bothBarWrapperStyle\" @touchstart=\"touchStart\" @touchmove=\"touchMoved\" @touchend=\"touchEnd\">\n            <div class=\"bothBar-thumn\" ></div>\n            <div class=\"bothBar-content\">\n                <slot name=\"content\">\n                </slot>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\n    import { ref,computed } from 'vue'\n    const points = ref({s:-1,e:-1,h:100,min:100,cuh:100});\n    const toutchTargetChecked = ref(false);\n    const swiperChecked = ref({time:null,arr:[],type:null,first:null});\n    const minHeight = 100;\n    const maxHeight = window.innerHeight - 100;\n    const targetChecked = (target)=>{\n        console.log(\"target : \",target)\n        console.log(\"target.parentNode : \",target.parentNode)\n        const cl = target.getAttribute(\"class\");\n        const checked = (cl)?cl.match(/ant-/g):null;\n        const parent = (target.parentNode)?target.parentNode:null;\n        const parentCl = (parent && parent.getAttribute(\"class\"))?parent.getAttribute(\"class\"):null;\n        const parehtChecked = (parentCl)?parentCl.match(/ant-/g):null;\n        return checked || parehtChecked ? true : false;\n    }\n    const touchStart = ($ev)=>{\n        toutchTargetChecked.value = targetChecked($ev.target);\n        points.value.s = $ev.targetTouches[0].pageY;\n        if(!swiperChecked.value.first) swiperChecked.value.first = points.value.h;\n        points.value.cuh = points.value.h;\n        if(!toutchTargetChecked.value){\n            $ev.preventDefault();\n            swiperChecked.value.arr[0] = $ev.targetTouches[0].pageY\n            swiperChecked.value.time = new Date().getTime();\n        }\n    }\n    const touchMoved = ($ev)=>{\n        if(toutchTargetChecked.value) return\n        const touchPoint = $ev.targetTouches[0].pageY;\n        const diff = points.value.s - touchPoint;\n        const calc = points.value.cuh + diff;\n        const price = (maxHeight < calc) ? maxHeight : (minHeight > calc) ? minHeight : calc\n        points.value.h = price;\n        if(touchPoint < swiperChecked.value.arr[0] && swiperChecked.value.type === null){\n            swiperChecked.value.type = \"up\"\n        }else if(swiperChecked.value.type === null){\n            swiperChecked.value.type = \"down\"\n        }\n        if(swiperChecked.value.type === \"down\"){\n            if(swiperChecked.value.arr.length == 1 || swiperChecked.value.arr[1] < touchPoint){\n                swiperChecked.value.arr[1] = touchPoint;\n            }else if(swiperChecked.value.arr[1] > touchPoint){\n                swiperChecked.value.arr[0] = touchPoint;\n                swiperChecked.value.arr[1] = touchPoint;\n                swiperChecked.value.time = new Date().getTime();\n                swiperChecked.value.type = \"up\"\n            }\n        }else{\n            if(swiperChecked.value.arr.length == 1 || swiperChecked.value.arr[1] > touchPoint){\n                swiperChecked.value.arr[1] = touchPoint;\n            }else if(swiperChecked.value.arr[1] < touchPoint){\n                swiperChecked.value.arr[0] = touchPoint;\n                swiperChecked.value.arr[1] = touchPoint;\n                swiperChecked.value.time = new Date().getTime();\n                swiperChecked.value.type = \"down\"\n            }\n\n        }\n    }\n    const touchEnd = ()=>{\n        points.value.s = -1;\n        if(toutchTargetChecked.value) return\n        const endTime = new Date().getTime();\n        const distance = (swiperChecked.value.type === 'up') ? swiperChecked.value.arr[0] - swiperChecked.value.arr[1] : swiperChecked.value.arr[1] - swiperChecked.value.arr[0] ;\n        const checkTime = endTime - swiperChecked.value.time;\n        console.log(\"checkTime : \",checkTime)\n        console.log(\"distance : \",distance)\n        console.log(\"swiperChecked.value.first : \",swiperChecked.value.first)\n        if(checkTime <= 250 && distance > 20){\n            switch (swiperChecked.value.type) {\n                case \"up\" :\n                    points.value.h = maxHeight;\n                    break;\n                default : \n                    points.value.h = minHeight;\n                    break;\n            }\n        }else if((points.value.h !== minHeight && swiperChecked.value.type === 'down') || (points.value.h !== maxHeight && swiperChecked.value.type === 'up')){\n            points.value.h = swiperChecked.value.first;\n        }\n        swiperChecked.value.arr = [];\n        swiperChecked.value.type = null;\n        swiperChecked.value.time = null;\n        swiperChecked.value.first = null;\n        \n    }\n    const bothBarWrapperStyle = computed(()=>{\n        const style = {};\n        style.height = points.value.h + \"rem\";\n        return style\n    })\n</script>\n<style type=\"scss\" scoped>\n    #bothBar{\n        position:relative;\n        height:100rem;\n        background:gray;\n    }\n    .bothBar-wrapper{\n        position:absolute;\n        bottom:0;\n        left:0;\n        right:0;\n        max-height:calc(100vh - 100rem);\n        min-height:100rem;\n        overflow:hidden;\n        background:#fff;\n    }\n    .bothBar-thumn{\n        position:relative;\n        height:20rem;\n        /* background:#000; */\n        &:after{\n            content:\"\";\n            position:absolute;\n            top:50%;\n            left:50%;\n            width:60rem;\n            height:5rem;\n            border-radius:5rem;\n            transform:translate(-50%,-50%);\n            background:#ededed;\n        }\n    }\n    .bothBar-content{\n        padding:20rem;\n    }\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAS;;EAGJC,KAAK,EAAC;AAAiB;;uBAHpCC,mBAAA,CAQM,OARNC,UAQM,GAPFC,mBAAA,CAMM;IANDH,KAAK,EAAC,iBAAiB;IAAEI,KAAK,EAF3CC,eAAA,CAE6CC,MAAA,CAAAC,mBAAmB;IAAGC,YAAU,EAAEF,MAAA,CAAAG,UAAU;IAAGC,WAAS,EAAEJ,MAAA,CAAAK,UAAU;IAAGC,UAAQ,EAAEN,MAAA,CAAAO;gCAClHV,mBAAA,CAAkC;IAA7BH,KAAK,EAAC;EAAe,6BAC1BG,mBAAA,CAGM,OAHNW,UAGM,GAFFC,WAAA,CACOC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}