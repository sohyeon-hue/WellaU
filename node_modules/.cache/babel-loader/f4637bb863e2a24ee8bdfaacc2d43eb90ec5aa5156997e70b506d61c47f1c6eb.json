{"ast":null,"code":"// import HelloWorld from './components/HelloWorld.vue'\nimport BackButton from './components/BackButton';\nexport default {\n  name: 'App',\n  props: {},\n  setup() {\n    const headerText = \"setup 헤더 텍스트입니다!!\";\n    const pageStatus = this.$store.state.pageStatus;\n    return {\n      headerText,\n      pageStatus\n    };\n  },\n  components: {\n    BackButton\n  },\n  computed: {\n    // pageStatus(){\n    //   return this.$store.state.pageStatus\n    // },\n    backBtnShow() {\n      let temp = true;\n      if (this.pageStatus === \"listPage\") {\n        temp = false;\n      }\n      return temp;\n    },\n    haderShow() {\n      let temp = true;\n      if (this.pageStatus === \"listPage\") {\n        temp = false;\n      }\n      return temp;\n    }\n  },\n  data: () => {\n    return {\n      checked: true,\n      css: {\n        token: {\n          Button: {\n            colorPrimary: 'skyblue',\n            borderRadius: 4,\n            fontColor: 'red'\n          },\n          Radio: {\n            colorPrimary: 'green'\n          }\n        }\n      }\n    };\n  },\n  created() {},\n  mounted() {},\n  watch: {\n    $route(to) {\n      let path = to.fullPath.replace(/(^\\/)/, '') === \"\" ? \"listPage\" : to.fullPath.replace(/(^\\/)/, '');\n      this.$store.state.pageStatus = path;\n    }\n  },\n  methods: {}\n};","map":{"version":3,"names":["BackButton","name","props","setup","headerText","pageStatus","$store","state","components","computed","backBtnShow","temp","haderShow","data","checked","css","token","Button","colorPrimary","borderRadius","fontColor","Radio","created","mounted","watch","$route","to","path","fullPath","replace","methods"],"sources":["/Users/gimgaui/Documents/documents/vue/vueTest/vue2/src/App.vue"],"sourcesContent":["<template>\n    <Header-vue v-if=\"haderShow\">\n      <template #title>\n        {{ headerText }}\n      </template>\n    </Header-vue>\n    <BackButton v-if=\"backBtnShow\" />\n\n  <a-dropdown>\n    <a class=\"ant-dropdown-link\" @click.prevent>\n      Hover me\n      <DownOutlined />\n    </a>\n    <template #overlay>\n      <a-menu>\n        <a-menu-item>\n          <a href=\"javascript:;\">1st menu item</a>\n        </a-menu-item>\n        <a-menu-item>\n          <a href=\"javascript:;\">2nd menu item</a>\n        </a-menu-item>\n        <a-menu-item>\n          <a href=\"javascript:;\">3rd menu item</a>\n        </a-menu-item>\n      </a-menu>\n    </template>\n  </a-dropdown>\n    <div id=\"content\" :page=\"pageStatus\">\n      <router-view />\n    </div>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\nimport BackButton from './components/BackButton';\n\nexport default {\n  name: 'App',\n  props : {},\n  setup(){\n    const headerText = \"setup 헤더 텍스트입니다!!\";\n    const pageStatus = this.$store.state.pageStatus\n\n    return {\n      headerText,\n      pageStatus\n    }\n  },\n  components: {\n    BackButton\n  },\n  computed : {\n    // pageStatus(){\n    //   return this.$store.state.pageStatus\n    // },\n    backBtnShow(){\n      let temp = true;\n      if(this.pageStatus === \"listPage\"){\n        temp = false\n      }\n      return temp;\n    },\n    haderShow(){\n      let temp = true;\n      if(this.pageStatus === \"listPage\"){\n        temp = false\n      }\n      return temp;\n    }\n  },\n  data : ()=>{\n    return {\n      checked : true,\n      css : {\n        token: {\n          Button: {\n            colorPrimary : 'skyblue',\n            borderRadius : 4,\n            fontColor : 'red',\n          },\n          Radio : {\n            colorPrimary : 'green',\n          },\n        },\n      }\n    }\n  },\n  created(){},\n  mounted(){},\n  watch : {\n    $route(to) {\n      let path = (to.fullPath.replace(/(^\\/)/,'') === \"\")?\"listPage\":to.fullPath.replace(/(^\\/)/,'');\n      this.$store.state.pageStatus = path;\n    },\n  },\n  methods : {},\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n"],"mappings":"AAiCA;AACA,OAAOA,UAAS,MAAO,yBAAyB;AAEhD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAI,EAAI,CAAC,CAAC;EACVC,KAAKA,CAAA,EAAE;IACL,MAAMC,UAAS,GAAI,mBAAmB;IACtC,MAAMC,UAAS,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,UAAS;IAE9C,OAAO;MACLD,UAAU;MACVC;IACF;EACF,CAAC;EACDG,UAAU,EAAE;IACVR;EACF,CAAC;EACDS,QAAO,EAAI;IACT;IACA;IACA;IACAC,WAAWA,CAAA,EAAE;MACX,IAAIC,IAAG,GAAI,IAAI;MACf,IAAG,IAAI,CAACN,UAAS,KAAM,UAAU,EAAC;QAChCM,IAAG,GAAI,KAAI;MACb;MACA,OAAOA,IAAI;IACb,CAAC;IACDC,SAASA,CAAA,EAAE;MACT,IAAID,IAAG,GAAI,IAAI;MACf,IAAG,IAAI,CAACN,UAAS,KAAM,UAAU,EAAC;QAChCM,IAAG,GAAI,KAAI;MACb;MACA,OAAOA,IAAI;IACb;EACF,CAAC;EACDE,IAAG,EAAIA,CAAA,KAAI;IACT,OAAO;MACLC,OAAM,EAAI,IAAI;MACdC,GAAE,EAAI;QACJC,KAAK,EAAE;UACLC,MAAM,EAAE;YACNC,YAAW,EAAI,SAAS;YACxBC,YAAW,EAAI,CAAC;YAChBC,SAAQ,EAAI;UACd,CAAC;UACDC,KAAI,EAAI;YACNH,YAAW,EAAI;UACjB;QACF;MACF;IACF;EACF,CAAC;EACDI,OAAOA,CAAA,EAAE,CAAC,CAAC;EACXC,OAAOA,CAAA,EAAE,CAAC,CAAC;EACXC,KAAI,EAAI;IACNC,MAAMA,CAACC,EAAE,EAAE;MACT,IAAIC,IAAG,GAAKD,EAAE,CAACE,QAAQ,CAACC,OAAO,CAAC,OAAO,EAAC,EAAE,MAAM,EAAE,GAAE,UAAU,GAACH,EAAE,CAACE,QAAQ,CAACC,OAAO,CAAC,OAAO,EAAC,EAAE,CAAC;MAC9F,IAAI,CAACvB,MAAM,CAACC,KAAK,CAACF,UAAS,GAAIsB,IAAI;IACrC;EACF,CAAC;EACDG,OAAM,EAAI,CAAC;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}