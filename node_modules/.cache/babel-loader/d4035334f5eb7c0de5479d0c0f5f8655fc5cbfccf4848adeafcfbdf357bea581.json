{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, \"textfield : \" + _toDisplayString($setup.textField), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.textField = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $setup.inputEv && $setup.inputEv(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.textField]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","$setup","textField","_cache","$event","onInput","args","inputEv"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pages/testVue.vue"],"sourcesContent":["<template>\n    <div>textfield : {{textField}}    </div>\n    <input v-model=\"textField\" @input='inputEv' />\n</template>\n<script>\n    import { ref,onMounted,toRef,toRefs } from 'vue'\n    export default {\n        name : \"testVue\",\n        props : {\n            id : {\n                type : String,\n                default : ()=>{\n                    return \"exid\";\n                }\n            }\n        },\n        setup(props,context){\n            const textField = ref(\"아아아아아아아아\");\n            console.log(\"props.id : \",props.id);\n\n            const { id } = toRefs(props)\n            console.log(\"id.value : \",id.value);\n\n            const id2 = toRef(props,\"id\");\n            console.log(\"id2 : \",id2);\n            console.log(\"context : \",context);\n            console.log(\"context.attrs : \",context.attrs);\n            console.log(\"textField.value : \",textField.value);\n            const inputEv = ($ev)=>{\n                console.log($ev)\n                textField.value = $ev.target.value\n            }\n\n            onMounted(()=>{\n\n            })\n            return {\n                textField,\n                inputEv\n            }\n        },\n    }\n</script>\n"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAAwC,aAAnC,cAAY,GAAAC,gBAAA,CAAEC,MAAA,CAAAC,SAAS,kB,gBAC5BH,mBAAA,CAA8C;IAFlD,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEoBH,MAAA,CAAAC,SAAS,GAAAE,MAAA;IAAGC,OAAK,EAAAF,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEL,MAAA,CAAAM,OAAA,IAAAN,MAAA,CAAAM,OAAA,IAAAD,IAAA,CAAO;iEAA1BL,MAAA,CAAAC,SAAS,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}