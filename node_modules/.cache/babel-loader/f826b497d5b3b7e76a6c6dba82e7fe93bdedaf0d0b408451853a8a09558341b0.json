{"ast":null,"code":"import { ref, watch, onBeforeUnmount } from 'vue';\nexport default {\n  __name: 'TimeCircle',\n  props: {\n    num: {\n      type: Number,\n      default: () => {\n        return \"\";\n      }\n    },\n    time: {\n      type: Number,\n      default: () => {\n        return 60000;\n      }\n    },\n    bgColor: {\n      type: String,\n      default: () => {\n        return \"#FF3B2E\";\n      }\n    }\n  },\n  emits: ['input', 'timeout'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n    const stop = () => {\n      clearInterval(timer);\n    };\n    const emits = __emit;\n    const canvas = ref(\"canvas\");\n    let timer = null;\n    function start() {\n      let angle = 0;\n      const oneStep = 100;\n      const totalTime = props.time;\n      const circlePrice = 6.3;\n      const circlePrice2 = 360;\n      const circleSize = 5;\n      clearInterval(timer);\n      timer = setInterval(() => {\n        angle += circlePrice / (totalTime / oneStep);\n        draw(angle);\n        if (angle >= circlePrice) {\n          clearInterval(timer);\n          emits(\"timeout\");\n        }\n      }, oneStep);\n      function draw(angle) {\n        const exchangeAngle = circlePrice2 / circlePrice * angle;\n        const ctx = canvas.value.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.value.width, canvas.value.height);\n        ctx.beginPath();\n        ctx.fillStyle = props.bgColor;\n        ctx.fillRect(0, 0, canvas.value.width, canvas.value.height);\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.moveTo(canvas.value.width / 2, canvas.value.height / 2);\n        ctx.arc(canvas.value.width / 2, canvas.value.height / 2, canvas.value.width / 2, canvas.value.height / 2, 0, Math.PI / 180 * 360, false);\n        ctx.fillStyle = \"rgba(255,255,255,0.3)\";\n        ctx.fill();\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.moveTo(canvas.value.width / 2, canvas.value.height / 2);\n        ctx.arc(canvas.value.width / 2, canvas.value.height / 2, canvas.value.width / 2, 0, Math.PI / 180 * exchangeAngle, false);\n        ctx.closePath();\n        ctx.fillStyle = \"#fff\";\n        ctx.fill();\n        ctx.beginPath();\n        ctx.moveTo(canvas.value.width / 2, canvas.value.height / 2);\n        ctx.arc(canvas.value.width / 2, canvas.value.height / 2, canvas.value.width / 2 - circleSize, 0, Math.PI / 180 * 360, false);\n        ctx.closePath();\n        ctx.fillStyle = props.bgColor;\n        ctx.fill();\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.moveTo(canvas.value.width - circleSize / 2, canvas.value.height / 2);\n        ctx.arc(canvas.value.width - circleSize / 2, canvas.value.height / 2, circleSize / 2, 0, Math.PI / 180 * 360, false);\n        ctx.fillStyle = \"#fff\";\n        ctx.fill();\n        ctx.closePath();\n        const left = canvas.value.width / 2 + (canvas.value.width / 2 - circleSize / 2) * Math.cos(angle);\n        const top = canvas.value.height / 2 + (canvas.value.height / 2 - circleSize / 2) * Math.sin(angle);\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.arc(left, top, circleSize / 2, Math.PI / 180 * 360, false);\n        ctx.fillStyle = \"#fff\";\n        ctx.fill();\n        ctx.closePath();\n        ctx.moveTo(0, 0);\n        ctx.rotate(90 * Math.PI / 180);\n        ctx.beginPath();\n        ctx.font = \"bold 100rem Noto Sans KR\";\n        ctx.textAlign = \"center\";\n        ctx.fillStyle = \"#fff\";\n        ctx.fillText(props.num, canvas.value.width / 2 - 3, canvas.value.width / 2 * -1 + 38);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n      }\n    }\n    const click = () => {\n      console.log(\"timer => \", timer);\n    };\n    watch(() => props.num, () => {\n      start();\n    }, {\n      immediate: true\n    });\n    onBeforeUnmount(() => {\n      clearInterval(timer);\n    });\n    __expose({\n      start,\n      stop\n    });\n    const __returned__ = {\n      props,\n      stop,\n      emits,\n      canvas,\n      get timer() {\n        return timer;\n      },\n      set timer(v) {\n        timer = v;\n      },\n      start,\n      click,\n      ref,\n      watch,\n      onBeforeUnmount\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onBeforeUnmount","props","__props","stop","clearInterval","timer","emits","__emit","canvas","start","angle","oneStep","totalTime","time","circlePrice","circlePrice2","circleSize","setInterval","draw","exchangeAngle","ctx","value","getContext","clearRect","width","height","beginPath","fillStyle","bgColor","fillRect","closePath","moveTo","arc","Math","PI","fill","left","cos","top","sin","rotate","font","textAlign","fillText","num","setTransform","click","console","log","immediate","__expose"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/components/TimeCircle.vue"],"sourcesContent":["<template>\n    <div @click=\"click\">\n        <canvas id=\"myCanvas\" height=\"220\" width=\"220\" ref=\"canvas\" style=\"transform:rotate(-90deg);\"></canvas>\n    </div>\n</template>\n<script setup>\n    import { ref,defineProps,watch,defineEmits,onBeforeUnmount,defineExpose } from 'vue'\n\n    const props = defineProps({\n        num : {\n            type : Number,\n            default : ()=>{\n                return \"\";\n            }\n        },\n        time : {\n            type : Number,\n            default : ()=>{\n                return 60000;\n            }\n        },\n        bgColor :{\n            type : String,\n            default : ()=>{\n                return \"#FF3B2E\";\n            }\n        }\n    })\n    const stop = ()=>{\n        clearInterval(timer)\n    }\n    const emits = defineEmits(['input','timeout'])\n    const canvas = ref(\"canvas\");\n    let timer = null;\n    function start(){\n        let angle = 0;\n        const oneStep = 100;\n        const totalTime = props.time;\n        const circlePrice = 6.3;\n        const circlePrice2 = 360;\n        const circleSize = 5;\n        clearInterval(timer)\n        timer = setInterval(()=>{\n            angle += circlePrice / (totalTime / oneStep);\n            draw(angle);\n            if(angle >= circlePrice){\n                clearInterval(timer);\n                emits(\"timeout\")\n            }\n        },oneStep)\n        function draw(angle){\n            const exchangeAngle = (circlePrice2 / circlePrice) * angle\n            const ctx = canvas.value.getContext(\"2d\");\n            ctx.clearRect(0,0,canvas.value.width, canvas.value.height);\n\n            ctx.beginPath();\n            ctx.fillStyle = props.bgColor;\n            ctx.fillRect(0,0,canvas.value.width,canvas.value.height);\n            ctx.closePath();\n\n\n            ctx.beginPath();\n            ctx.moveTo((canvas.value.width / 2),(canvas.value.height / 2));\n            ctx.arc((canvas.value.width / 2),(canvas.value.height / 2),(canvas.value.width / 2),(canvas.value.height / 2),0,(Math.PI/180) * 360,false);\n            ctx.fillStyle = \"rgba(255,255,255,0.3)\";\n            ctx.fill();\n            ctx.closePath();\n\n            ctx.beginPath();\n            ctx.moveTo((canvas.value.width / 2),(canvas.value.height / 2));\n            ctx.arc((canvas.value.width / 2),(canvas.value.height / 2),(canvas.value.width / 2),0,(Math.PI/180) * exchangeAngle,false);\n            ctx.closePath();\n            ctx.fillStyle = \"#fff\";\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.moveTo((canvas.value.width / 2),(canvas.value.height / 2));\n            ctx.arc((canvas.value.width / 2),(canvas.value.height / 2),((canvas.value.width / 2) - (circleSize)),0,(Math.PI/180) * 360,false);\n            ctx.closePath();\n            ctx.fillStyle = props.bgColor;\n            ctx.fill();\n            ctx.closePath();\n\n            ctx.beginPath();\n            ctx.moveTo(canvas.value.width - (circleSize / 2),canvas.value.height / 2)\n            ctx.arc(canvas.value.width - (circleSize / 2),canvas.value.height / 2,(circleSize / 2),0,(Math.PI/180)*360,false);\n            ctx.fillStyle = \"#fff\";\n            ctx.fill();\n            ctx.closePath();\n\n            const left = canvas.value.width / 2 + ((canvas.value.width / 2) - (circleSize / 2) ) * Math.cos(angle);\n            const top = canvas.value.height / 2 + ((canvas.value.height / 2) - (circleSize / 2) ) * Math.sin(angle);\n            ctx.beginPath();\n            ctx.moveTo(left,top);\n            ctx.arc(left,top,(circleSize / 2),(Math.PI / 180) * 360, false);\n            ctx.fillStyle = \"#fff\";\n            ctx.fill();\n            ctx.closePath();\n\n            ctx.moveTo(0,0)\n            ctx.rotate(90 * Math.PI / 180);\n            ctx.beginPath();\n            ctx.font=\"bold 100rem Noto Sans KR\"\n            ctx.textAlign = \"center\"\n            ctx.fillStyle = \"#fff\"\n            ctx.fillText(props.num,((canvas.value.width / 2)) - 3,((canvas.value.width / 2) * -1) + 38);\n            ctx.setTransform(1,0,0,1,0,0);\n        }\n\n    }\n    const click = ()=>{\n        console.log(\"timer => \",timer)\n    }\n    watch(()=>props.num,()=>{\n        start();\n    },{immediate : true})\n\n    onBeforeUnmount(()=>{\n        clearInterval(timer);\n    })\n    defineExpose({\n        start,\n        stop,\n    })\n</script>\n<style type=\"scss\" scoped>\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}