{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport pageListData from './pageList';\nexport default {\n  __name: 'pageListView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const pageList = ref(pageListData);\n    const categoryLine = index => {\n      let temp = \"\";\n      const index2 = index - 1;\n      if (index > 0 && pageList.value[index2].category !== pageList.value[index].category) {\n        temp = \"categoryLine\";\n      }\n      return temp;\n    };\n    const router = useRouter();\n    const trClick = path => {\n      router.push(path);\n    };\n    const success = ref(0);\n    console.log(pageListData.filtter);\n    // console.log(pageListData.fillter(a => a.status === '완료'))\n    // console.log(pageListData.fillter(a => a.status === '완료'))\n\n    const __returned__ = {\n      pageList,\n      categoryLine,\n      router,\n      trClick,\n      success,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get pageListData() {\n        return pageListData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","pageListData","pageList","categoryLine","index","temp","index2","value","category","router","trClick","path","push","success","console","log","filtter"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pageListView.vue"],"sourcesContent":["<template>\n    <div class=\"listWrap\">\n        <div class=\"top\">화면설계서 버전 : v1.15, 총 페이지 : {{pageList.length}} 완료 : {{success}}</div>\n        <table cellspacing=\"0\" cellapdding=\"0\">\n            <colgroup>\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:10%\" />\n                <col style=\"width:20%\" />\n                <col style=\"width:10%\" />\n            </colgroup>\n            <thead>\n                <tr>\n                    <th>\n                        카테고리\n                    </th>\n                    <th>\n                        OS\n                    </th>\n                    <th>\n                        이름\n                    </th>\n                    <th>\n                        피피티 번호\n                    </th>\n                    <th>\n                        Path\n                    </th>\n                    <th>\n                        완료\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(page,index) in pageList\" :key=\"'list' + index\" :class=\"categoryLine(index)\" @click=\"trClick(page.path)\">\n                    <td>\n                        {{page.category}}\n                    </td>\n                    <td>\n                        {{page.os}}\n                    </td>\n                    <td>\n                        {{page.name}}\n                    </td>\n                    <td>\n                        {{page.page}}\n                    </td>\n                    <td>\n                        {{page.path}}\n                    </td>\n                    <td>\n                        {{page.status ? page.status : \"-\"}}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n<script setup>\n    import { ref } from 'vue'\n    import { useRouter } from 'vue-router'\n    import pageListData from './pageList'\n\n    const pageList = ref(pageListData)\n    const categoryLine = (index)=>{\n        let temp = \"\";\n        const index2 = index - 1;\n        if(index > 0 && pageList.value[index2].category !== pageList.value[index].category){\n            temp = \"categoryLine\"\n        }\n        return temp;\n    }\n    const router = useRouter();\n    const trClick = (path)=>{\n        router.push(path);\n    }\n    const success = ref(0);\n    console.log(pageListData.filtter)\n    // console.log(pageListData.fillter(a => a.status === '완료'))\n    // console.log(pageListData.fillter(a => a.status === '완료'))\n</script>\n<style type=\"scss\" scoped>\n    .listWrap{\n        padding:0 0 10rem 0;\n        background:rgba(0,0,0,0.7);\n    }\n    table{\n        width:calc(100% - 20rem);\n        margin:0 auto;\n        font-size:12rem;\n        border-collapse:collapse;\n        td, th{\n            border:1px solid rgba(255,255,255,0.15);\n        }\n        thead{\n            th, td{\n                height:40rem;\n                font-weight:bold;\n                color:#ccc;\n                background:rgba(0,0,0,0.55);\n            }\n        }\n        tbody{\n            td{\n                padding:10rem;\n                font-size:15rem;\n                color:#fff;\n                word-break:break-all;\n                background:rgba(0,0,0,0.35);\n                &:first-child{\n                    text-align:center;\n                }\n            }\n        }\n    }\n    .categoryLine{\n        border-top:2rem double rgba(255,255,255,0.5);\n    }\n    .top{\n        padding:10rem;\n        font-size:14rem;\n        text-align:right;\n        color:rgba(255,255,255,0.8);\n    }\n    .subTit{\n        padding:10rem;\n        font-size:14rem;\n        text-align:right;\n        color:rgba(255,255,255,0.8);\n    }\n</style>"],"mappings":";AA4DI,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,SAAS,QAAQ,YAAW;AACrC,OAAOC,YAAY,MAAM,YAAW;;;;;;;IAEpC,MAAMC,QAAQ,GAAGH,GAAG,CAACE,YAAY;IACjC,MAAME,YAAY,GAAIC,KAAK,IAAG;MAC1B,IAAIC,IAAI,GAAG,EAAE;MACb,MAAMC,MAAM,GAAGF,KAAK,GAAG,CAAC;MACxB,IAAGA,KAAK,GAAG,CAAC,IAAIF,QAAQ,CAACK,KAAK,CAACD,MAAM,CAAC,CAACE,QAAQ,KAAKN,QAAQ,CAACK,KAAK,CAACH,KAAK,CAAC,CAACI,QAAQ,EAAC;QAC/EH,IAAI,GAAG,cAAa;MACxB;MACA,OAAOA,IAAI;IACf;IACA,MAAMI,MAAM,GAAGT,SAAS,CAAC,CAAC;IAC1B,MAAMU,OAAO,GAAIC,IAAI,IAAG;MACpBF,MAAM,CAACG,IAAI,CAACD,IAAI,CAAC;IACrB;IACA,MAAME,OAAO,GAAGd,GAAG,CAAC,CAAC,CAAC;IACtBe,OAAO,CAACC,GAAG,CAACd,YAAY,CAACe,OAAO;IAChC;IACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}