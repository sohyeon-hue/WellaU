{"ast":null,"code":"import { ref, computed } from 'vue';\nimport testComponent from './testComponent';\nconst radius = 20;\nexport default {\n  __name: 'testVue',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const textField = ref(\"텍스트 필드 입니다.\");\n    const childValue = ref(\"부모에서 값 전달\");\n    const childInputEv = val => {\n      childValue.value = val;\n    };\n    const inputEv = $ev => {\n      textField.value = $ev.target.value;\n    };\n    const inputStyle = computed(() => {\n      const style = {\n        color: 'red'\n      };\n      return style;\n    });\n    const diameter = 2 * Math.PI * radius;\n    const colors = [\"#ddd\", \"#bbb\", \"#aaa\", \"#888\", \"#666\"];\n    const dataset = [9, 7, 5, 3, 1];\n    // 전체 데이터셋의 총 합\n    const total = dataset.reduce((r, v) => r + v, 0);\n\n    // 데이터셋의 누적 값\n    const acc = dataset.reduce((arr, v) => {\n      const last = arr[arr.length - 1];\n      return [...arr, last + v];\n    }, [0]);\n\n    // 프로퍼티 할당 노가다 시작...\n    const svg = document.getElementById('svg');\n    dataset.forEach((data, i) => {\n      const ratio = data / total;\n      const fillSpace = diameter * ratio;\n      const emptySpace = diameter - fillSpace;\n      const offset = acc[i] / total * diameter;\n      const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n      circle.setAttribute('cx', '50');\n      circle.setAttribute('cy', '50');\n      circle.setAttribute('r', String(radius));\n      circle.setAttribute('fill', 'transparent');\n      circle.setAttribute('stroke', colors[i]);\n      circle.setAttribute('stroke-width', '10');\n      circle.setAttribute('stroke-dasharray', `${fillSpace} ${emptySpace}`);\n      circle.setAttribute('stroke-dashoffset', String(-offset));\n      svg.appendChild(circle);\n    });\n    const __returned__ = {\n      textField,\n      childValue,\n      childInputEv,\n      inputEv,\n      inputStyle,\n      radius,\n      diameter,\n      colors,\n      dataset,\n      total,\n      acc,\n      svg,\n      ref,\n      computed,\n      get testComponent() {\n        return testComponent;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","testComponent","radius","textField","childValue","childInputEv","val","value","inputEv","$ev","target","inputStyle","style","color","diameter","Math","PI","colors","dataset","total","reduce","r","v","acc","arr","last","length","svg","document","getElementById","forEach","data","i","ratio","fillSpace","emptySpace","offset","circle","createElementNS","setAttribute","String","appendChild"],"sources":["/Users/gimgaui/Documents/documents/vue/WellaU/WellaU/src/views/pages/testVue.vue"],"sourcesContent":["<template>\n    <div>textfield : {{textField}}    </div>\n    <input v-model=\"textField\" @input='inputEv' :style=\"inputStyle\" />\n    <div>\n        <div>childValue : {{childValue}}</div>\n        <testComponent v-model:value=\"childValue\" @input=\"childInputEv\" />\n    </div>\n    <div>\n        <svg viewBox=\"0 0 100 100\" id=\"svg\"></svg>\n    </div>\n</template>\n<script setup>\n    import { ref, computed } from 'vue'\n    import testComponent from './testComponent'\n    const textField = ref(\"텍스트 필드 입니다.\");\n    const childValue = ref(\"부모에서 값 전달\");\n    const childInputEv = (val)=>{\n         childValue.value = val;\n    }\n    const inputEv = ($ev)=>{\n      textField.value = $ev.target.value  \n    }\n    const inputStyle = computed(()=>{\n        const style = {color : 'red'};\n        return style\n    })\n    const radius = 20;\n    const diameter = 2 * Math.PI * radius;\n    const colors = [\"#ddd\",\"#bbb\",\"#aaa\",\"#888\",\"#666\"];\n    const dataset = [9,7,5,3,1];\n    // 전체 데이터셋의 총 합\n    const total = dataset.reduce((r, v) => r + v, 0);\n\n    // 데이터셋의 누적 값\n    const acc = dataset.reduce((arr, v) => {\n    const last = arr[arr.length - 1];\n    return [...arr, last + v];\n    }, [0]);\n\n    // 프로퍼티 할당 노가다 시작...\n    const svg = document.getElementById('svg');\n    dataset.forEach((data, i) => {\n    const ratio = data / total;\n    const fillSpace = diameter * ratio;\n    const emptySpace = diameter - fillSpace;\n    const offset = (acc[i] / total) * diameter;\n    \n    const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    circle.setAttribute('cx', '50');\n    circle.setAttribute('cy', '50');\n    circle.setAttribute('r', String(radius));\n    circle.setAttribute('fill', 'transparent');\n    circle.setAttribute('stroke', colors[i]);\n    circle.setAttribute('stroke-width', '10');\n    circle.setAttribute('stroke-dasharray', `${fillSpace} ${emptySpace}`);\n    circle.setAttribute('stroke-dashoffset', String(-offset));\n    \n    svg.appendChild(circle);\n    });\n</script>\n<!--\n<script>\n    import { ref,onMounted,computed, watch } from 'vue'\n    import { useStore } from 'vuex'\n    import testComponent from './testComponent'\n    export default {\n        name : \"testVue\",\n        props : {\n            id : {\n                type : String,\n                default : ()=>{\n                    return \"exid\";\n                }\n            }\n        },\n        components : {\n            testComponent\n        },\n        setup(){\n\n            const cildValue = ref(\"부모에서 값 전달\")\n\n\n            const textField = ref(\"아아아아아아아아\");\n            const inputEv = ($ev)=>{\n                textField.value = $ev.target.value\n            }\n            const inputStyle = computed(()=>{\n                const style = {};\n                style.color = \"red\";\n                console.log(\"style : \",style)\n                return style;\n            })\n            const stroe = useStore();\n            console.log(\"useStore : \",stroe)\n            console.log(\"useStore.state.pageStatus : \",stroe.state.pageStatus)\n\n            onMounted(()=>{\n\n            })\n            watch(textField,(n)=>{\n                console.log(\"watch n : \",n)\n            })\n\n            const childInputEv = (val)=>{\n                console.log(\"val : \",val);\n                cildValue.value = val;\n            }\n            return {\n                textField,\n                inputEv,\n                inputStyle,\n                cildValue,\n                childInputEv\n            }\n        },\n    }\n</script>\n-->"],"mappings":"AAYI,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,OAAOC,aAAa,MAAM,iBAAgB;AAa1C,MAAMC,MAAM,GAAG,EAAE;;;;;;;IAZjB,MAAMC,SAAS,GAAGJ,GAAG,CAAC,aAAa,CAAC;IACpC,MAAMK,UAAU,GAAGL,GAAG,CAAC,WAAW,CAAC;IACnC,MAAMM,YAAY,GAAIC,GAAG,IAAG;MACvBF,UAAU,CAACG,KAAK,GAAGD,GAAG;IAC3B;IACA,MAAME,OAAO,GAAIC,GAAG,IAAG;MACrBN,SAAS,CAACI,KAAK,GAAGE,GAAG,CAACC,MAAM,CAACH,KAAK;IACpC;IACA,MAAMI,UAAU,GAAGX,QAAQ,CAAC,MAAI;MAC5B,MAAMY,KAAK,GAAG;QAACC,KAAK,EAAG;MAAK,CAAC;MAC7B,OAAOD,KAAI;IACf,CAAC;IAED,MAAME,QAAQ,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGd,MAAM;IACrC,MAAMe,MAAM,GAAG,CAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,CAAC;IACnD,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IAC3B;IACA,MAAMC,KAAK,GAAGD,OAAO,CAACE,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;;IAEhD;IACA,MAAMC,GAAG,GAAGL,OAAO,CAACE,MAAM,CAAC,CAACI,GAAG,EAAEF,CAAC,KAAK;MACvC,MAAMG,IAAI,GAAGD,GAAG,CAACA,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC;MAChC,OAAO,CAAC,GAAGF,GAAG,EAAEC,IAAI,GAAGH,CAAC,CAAC;IACzB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEP;IACA,MAAMK,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAC1CX,OAAO,CAACY,OAAO,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;MAC7B,MAAMC,KAAK,GAAGF,IAAI,GAAGZ,KAAK;MAC1B,MAAMe,SAAS,GAAGpB,QAAQ,GAAGmB,KAAK;MAClC,MAAME,UAAU,GAAGrB,QAAQ,GAAGoB,SAAS;MACvC,MAAME,MAAM,GAAIb,GAAG,CAACS,CAAC,CAAC,GAAGb,KAAK,GAAIL,QAAQ;MAE1C,MAAMuB,MAAM,GAAGT,QAAQ,CAACU,eAAe,CAAC,4BAA4B,EAAE,QAAQ,CAAC;MAC/ED,MAAM,CAACE,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;MAC/BF,MAAM,CAACE,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;MAC/BF,MAAM,CAACE,YAAY,CAAC,GAAG,EAAEC,MAAM,CAACtC,MAAM,CAAC,CAAC;MACxCmC,MAAM,CAACE,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC;MAC1CF,MAAM,CAACE,YAAY,CAAC,QAAQ,EAAEtB,MAAM,CAACe,CAAC,CAAC,CAAC;MACxCK,MAAM,CAACE,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC;MACzCF,MAAM,CAACE,YAAY,CAAC,kBAAkB,EAAE,GAAGL,SAAS,IAAIC,UAAU,EAAE,CAAC;MACrEE,MAAM,CAACE,YAAY,CAAC,mBAAmB,EAAEC,MAAM,CAAC,CAACJ,MAAM,CAAC,CAAC;MAEzDT,GAAG,CAACc,WAAW,CAACJ,MAAM,CAAC;IACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}